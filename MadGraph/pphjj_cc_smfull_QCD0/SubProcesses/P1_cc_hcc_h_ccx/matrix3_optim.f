      SUBROUTINE SMATRIX3(P,ANS)
C     
C     Generated by MadGraph5_aMC@NLO v. 3.5.0, 2023-05-12
C     By the MadGraph5_aMC@NLO Development Team
C     Visit launchpad.net/madgraph5 and amcatnlo.web.cern.ch
C     
C     MadGraph5_aMC@NLO for Madevent Version
C     
C     Returns amplitude squared summed/avg over colors
C     and helicities
C     for the point in phase space P(0:3,NEXTERNAL)
C     
C     Process: c~ c~ > h c~ c~ QCD=0 @1
C     *   Decay: h > c c~ WEIGHTED<=2
C     
      IMPLICIT NONE
C     
C     CONSTANTS
C     
      Include 'genps.inc'
      Include 'maxconfigs.inc'
      Include 'nexternal.inc'
      Include 'maxamps.inc'
      INTEGER                 NCOMB         
      PARAMETER (             NCOMB=60)
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=28) 
      INTEGER    NDIAGS
      PARAMETER (NDIAGS=28) 
      INTEGER    THEL
      PARAMETER (THEL=2*NCOMB)
C     
C     ARGUMENTS 
C     
      REAL*8 P(0:3,NEXTERNAL),ANS
C     
C     LOCAL VARIABLES 
C     
      INTEGER CONFSUB(MAXSPROC,LMAXCONFIGS)
      INCLUDE 'config_subproc_map.inc'
      INTEGER NHEL(NEXTERNAL,NCOMB)
      REAL*8 T
      REAL*8 R,SUMHEL,TS(NCOMB)
      INTEGER I,IDEN
      INTEGER JC(NEXTERNAL),II
      REAL*8 XTOT
      INTEGER  J, JJ

      double precision get_channel_cut
      external get_channel_cut

C     
C     GLOBAL VARIABLES
C     
      DOUBLE PRECISION AMP2(MAXAMPS), JAMP2(0:MAXFLOW)
      COMMON/TO_AMPS/  AMP2,       JAMP2


C     
C     INFORMATION TO WRITE THE HELICITY IN THE EVENT --not memory
C      efficient--
C     
      CHARACTER*101         HEL_BUFF
      COMMON/TO_HELICITY/  HEL_BUFF

      INTEGER NB_SPIN_STATE_in(2)
      common /nb_hel_state/ nb_spin_state_in

      REAL*8 POL(2)

      COMMON/TO_POLARIZATION/ POL
      double precision tmin_for_channel
      integer sde_strat    !  1 means standard single diagram enhancement strategy,
C     2 means approximation by the	denominator of the propagator
      common/TO_CHANNEL_STRAT/tmin_for_channel,	sde_strat

      INTEGER          ISUM_HEL
      LOGICAL                    MULTI_CHANNEL
      COMMON/TO_MATRIX/ISUM_HEL, MULTI_CHANNEL
      INTEGER MAPCONFIG(0:LMAXCONFIGS), ICONFIG
      COMMON/TO_MCONFIGS/MAPCONFIG, ICONFIG
      INTEGER SUBDIAG(MAXSPROC),IB(2)
      COMMON/TO_SUB_DIAG/SUBDIAG,IB
      
      DATA (NHEL(I,1),I=1,6) /-1,-1,-1, 1, 1,-1/
      DATA (NHEL(I,2),I=1,6) /-1,-1,-1, 1,-1, 1/
      DATA (NHEL(I,3),I=1,6) /-1,-1,-1, 1,-1,-1/
      DATA (NHEL(I,4),I=1,6) /-1,-1,-1,-1, 1, 1/
      DATA (NHEL(I,5),I=1,6) /-1,-1,-1,-1, 1,-1/
      DATA (NHEL(I,6),I=1,6) /-1,-1,-1,-1,-1, 1/
      DATA (NHEL(I,7),I=1,6) /-1,-1,-1,-1,-1,-1/
      DATA (NHEL(I,8),I=1,6) /-1,-1, 1, 1, 1, 1/
      DATA (NHEL(I,9),I=1,6) /-1,-1, 1, 1, 1,-1/
      DATA (NHEL(I,10),I=1,6) /-1,-1, 1, 1,-1, 1/
      DATA (NHEL(I,11),I=1,6) /-1,-1, 1, 1,-1,-1/
      DATA (NHEL(I,12),I=1,6) /-1,-1, 1,-1, 1,-1/
      DATA (NHEL(I,13),I=1,6) /-1,-1, 1,-1,-1, 1/
      DATA (NHEL(I,14),I=1,6) /-1,-1, 1,-1,-1,-1/
      DATA (NHEL(I,15),I=1,6) /-1, 1,-1, 1, 1, 1/
      DATA (NHEL(I,16),I=1,6) /-1, 1,-1, 1, 1,-1/
      DATA (NHEL(I,17),I=1,6) /-1, 1,-1, 1,-1, 1/
      DATA (NHEL(I,18),I=1,6) /-1, 1,-1, 1,-1,-1/
      DATA (NHEL(I,19),I=1,6) /-1, 1,-1,-1, 1, 1/
      DATA (NHEL(I,20),I=1,6) /-1, 1,-1,-1, 1,-1/
      DATA (NHEL(I,21),I=1,6) /-1, 1,-1,-1,-1, 1/
      DATA (NHEL(I,22),I=1,6) /-1, 1,-1,-1,-1,-1/
      DATA (NHEL(I,23),I=1,6) /-1, 1, 1, 1, 1, 1/
      DATA (NHEL(I,24),I=1,6) /-1, 1, 1, 1, 1,-1/
      DATA (NHEL(I,25),I=1,6) /-1, 1, 1, 1,-1, 1/
      DATA (NHEL(I,26),I=1,6) /-1, 1, 1, 1,-1,-1/
      DATA (NHEL(I,27),I=1,6) /-1, 1, 1,-1, 1, 1/
      DATA (NHEL(I,28),I=1,6) /-1, 1, 1,-1, 1,-1/
      DATA (NHEL(I,29),I=1,6) /-1, 1, 1,-1,-1, 1/
      DATA (NHEL(I,30),I=1,6) /-1, 1, 1,-1,-1,-1/
      DATA (NHEL(I,31),I=1,6) / 1,-1,-1, 1, 1, 1/
      DATA (NHEL(I,32),I=1,6) / 1,-1,-1, 1, 1,-1/
      DATA (NHEL(I,33),I=1,6) / 1,-1,-1, 1,-1, 1/
      DATA (NHEL(I,34),I=1,6) / 1,-1,-1, 1,-1,-1/
      DATA (NHEL(I,35),I=1,6) / 1,-1,-1,-1, 1, 1/
      DATA (NHEL(I,36),I=1,6) / 1,-1,-1,-1, 1,-1/
      DATA (NHEL(I,37),I=1,6) / 1,-1,-1,-1,-1, 1/
      DATA (NHEL(I,38),I=1,6) / 1,-1,-1,-1,-1,-1/
      DATA (NHEL(I,39),I=1,6) / 1,-1, 1, 1, 1, 1/
      DATA (NHEL(I,40),I=1,6) / 1,-1, 1, 1, 1,-1/
      DATA (NHEL(I,41),I=1,6) / 1,-1, 1, 1,-1, 1/
      DATA (NHEL(I,42),I=1,6) / 1,-1, 1, 1,-1,-1/
      DATA (NHEL(I,43),I=1,6) / 1,-1, 1,-1, 1, 1/
      DATA (NHEL(I,44),I=1,6) / 1,-1, 1,-1, 1,-1/
      DATA (NHEL(I,45),I=1,6) / 1,-1, 1,-1,-1, 1/
      DATA (NHEL(I,46),I=1,6) / 1,-1, 1,-1,-1,-1/
      DATA (NHEL(I,47),I=1,6) / 1, 1,-1, 1, 1, 1/
      DATA (NHEL(I,48),I=1,6) / 1, 1,-1, 1, 1,-1/
      DATA (NHEL(I,49),I=1,6) / 1, 1,-1, 1,-1, 1/
      DATA (NHEL(I,50),I=1,6) / 1, 1,-1,-1, 1, 1/
      DATA (NHEL(I,51),I=1,6) / 1, 1,-1,-1, 1,-1/
      DATA (NHEL(I,52),I=1,6) / 1, 1,-1,-1,-1, 1/
      DATA (NHEL(I,53),I=1,6) / 1, 1,-1,-1,-1,-1/
      DATA (NHEL(I,54),I=1,6) / 1, 1, 1, 1, 1, 1/
      DATA (NHEL(I,55),I=1,6) / 1, 1, 1, 1, 1,-1/
      DATA (NHEL(I,56),I=1,6) / 1, 1, 1, 1,-1, 1/
      DATA (NHEL(I,57),I=1,6) / 1, 1, 1, 1,-1,-1/
      DATA (NHEL(I,58),I=1,6) / 1, 1, 1,-1, 1, 1/
      DATA (NHEL(I,59),I=1,6) / 1, 1, 1,-1, 1,-1/
      DATA (NHEL(I,60),I=1,6) / 1, 1, 1,-1,-1, 1/
      DATA IDEN/72/

C     ----------
C     BEGIN CODE
C     ----------

      DO I=1,NEXTERNAL
        JC(I) = +1
      ENDDO

      IF (multi_channel) THEN
        DO I=1,NDIAGS
          AMP2(I)=0D0
        ENDDO
        JAMP2(0)=2
        DO I=1,INT(JAMP2(0))
          JAMP2(I)=0D0
        ENDDO
      ENDIF
      ANS = 0D0
      WRITE(HEL_BUFF,'(20I5)') (0,I=1,NEXTERNAL)
C     Kiran please check if you need this:    
      DO I=1,NCOMB
        TS(I)=0d0
      ENDDO

      call MATRIX3(P ,JC(1), TS)
      DO I=1,NCOMB     
        T=TS(I)  
        DO JJ=1,nincoming
          IF(POL(JJ).NE.1d0.AND.NHEL(JJ,I).EQ.INT(SIGN(1d0,POL(JJ))))
     $      THEN
            T=T*ABS(POL(JJ))*NB_SPIN_STATE_IN(JJ)/2d0    !  NB_SPIN_STATE(JJ)/2d0 is added for polarised beam
          ELSE IF(POL(JJ).NE.1d0)THEN
            T=T*(2d0-ABS(POL(JJ)))*NB_SPIN_STATE_IN(JJ)/2d0
          ENDIF
        ENDDO
        ANS=ANS+DABS(T)
        TS(I)=T
      ENDDO

      IF (ANS.ne.0d0) THEN
        CALL RANMAR(R)
        SUMHEL=0d0
        DO I=1,NCOMB
          SUMHEL=SUMHEL+DABS(TS(I))/ANS
          IF(R.LT.SUMHEL)THEN
            WRITE(HEL_BUFF,'(20i5)')(NHEL(II,I),II=1,NEXTERNAL)
C           Set right sign for ANS, based on sign of chosen helicity
            ANS=DSIGN(ANS,TS(I))
            GOTO 10
          ENDIF
        ENDDO
 10     CONTINUE   
      ENDIF
      IF (MULTI_CHANNEL) THEN
        XTOT=0D0
        DO I=1,LMAXCONFIGS
          J = CONFSUB(3, I)
          if (J.ne.0)then
            if (sde_strat.eq.1)then
              AMP2(J) = AMP2(J) * GET_CHANNEL_CUT(P, I)
            else
              AMP2(J) = GET_CHANNEL_CUT(P, I)
            endif
            XTOT=XTOT+AMP2(J)

          endif
        ENDDO
        IF (XTOT.NE.0D0) THEN
          ANS=ANS*AMP2(SUBDIAG(3))/XTOT
        ELSE IF(ANS.ne.0d0) THEN
          write(*,*) 'Problem in the multi-channeling. All amp2 are'
     $     //' zero but not the total matrix-element'
          stop 1
        ENDIF
      ENDIF
      ANS=ANS/DBLE(IDEN)
      END


      Subroutine  MATRIX3(P,IC, TS)
C     
C     Generated by MadGraph5_aMC@NLO v. 3.5.0, 2023-05-12
C     By the MadGraph5_aMC@NLO Development Team
C     Visit launchpad.net/madgraph5 and amcatnlo.web.cern.ch
C     
C     Returns amplitude squared summed/avg over colors
C     for the point with external lines W(0:6,NEXTERNAL)
C     
C     Process: c~ c~ > h c~ c~ QCD=0 @1
C     *   Decay: h > c c~ WEIGHTED<=2
C     
      IMPLICIT NONE
C     
C     CONSTANTS
C     
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=28) 
      include 'genps.inc'
      include 'nexternal.inc'
      include 'maxamps.inc'
      INTEGER    NWAVEFUNCS,     NCOLOR
      PARAMETER (NWAVEFUNCS=96, NCOLOR=2) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
      COMPLEX*16 IMAG1
      PARAMETER (IMAG1=(0D0,1D0))
      INTEGER NAMPSO, NSQAMPSO
      PARAMETER (NAMPSO=1, NSQAMPSO=1)
      LOGICAL CHOSEN_SO_CONFIGS(NSQAMPSO)
      DATA CHOSEN_SO_CONFIGS/.TRUE./
      SAVE CHOSEN_SO_CONFIGS
      INTEGER                 NCOMB         
      PARAMETER (             NCOMB=60)
C     
C     ARGUMENTS 
C     
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
      REAL*8 TS(NCOMB)
C     
C     LOCAL VARIABLES 
C     
      INTEGER I,J,M,N,K
      COMPLEX*16 ZTEMP,TMP_JAMP(0)
      COMPLEX*16 TMP(6)
      REAL*8 CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NCOMB,NGRAPHS), JAMP(NCOLOR,NAMPSO)
      COMPLEX*16 W(6,NWAVEFUNCS)
C     Needed for v4 models
      COMPLEX*16 DUM0,DUM1
      DATA DUM0, DUM1/(0d0, 0d0), (1d0, 0d0)/

      double precision fk_mdl_WZ 
      double precision fk_mdl_WH 
      double precision fk_ZERO 
      save fk_mdl_WZ 
      save fk_mdl_WH 
      save fk_ZERO 

      logical first
      data first /.true./
      save first
C     
C     FUNCTION
C     
      INTEGER SQSOINDEX3

C     
C     GLOBAL VARIABLES
C     
      Double Precision amp2(maxamps), jamp2(0:maxflow)
      common/to_amps/  amp2,       jamp2
      include 'coupl.inc'

      double precision tmin_for_channel
      integer sde_strat    !  1 means standard single diagram enhancement strategy,
C     2 means approximation by the	denominator of the propagator
      common/TO_CHANNEL_STRAT/tmin_for_channel,	sde_strat

      double precision small_width_treatment
      common/narrow_width/small_width_treatment
C     
C     COLOR DATA
C     
      DATA (CF(i,  1),i=  1,  2) /2.700000000000000d+01
     $ ,9.000000000000000d+00/
C     1 T(1,5) T(2,6) T(3,4)
      DATA (CF(i,  2),i=  1,  2) /9.000000000000000d+00
     $ ,2.700000000000000d+01/
C     1 T(1,6) T(2,5) T(3,4)
C     ----------
C     BEGIN CODE
C     ----------
      if (first) then
        first=.false.
        IF(ZERO.ne.0d0) fk_ZERO = SIGN(MAX(ABS(ZERO), ABS(ZERO
     $   *small_width_treatment)), ZERO)
        IF(ZERO.ne.0d0) fk_ZERO = SIGN(MAX(ABS(ZERO), ABS(mdl_MC
     $   *small_width_treatment)), ZERO)
        IF(mdl_WH.ne.0d0) fk_mdl_WH = SIGN(MAX(ABS(mdl_WH), ABS(mdl_MH
     $   *small_width_treatment)), mdl_WH)
        IF(mdl_WZ.ne.0d0) fk_mdl_WZ = SIGN(MAX(ABS(mdl_WZ), ABS(mdl_MZ
     $   *small_width_treatment)), mdl_WZ)
      endif
      AMP(:,:) = (0d0,0d0)
            CALL OXXXXX(P(0,1),MDL_MC,+1,-1*IC(1),W(1,1))  !  count 196
      CALL OXXXXX(P(0,1),MDL_MC,-1,-1*IC(1),W(1,2))  !  count 196
      CALL OXXXXX(P(0,2),MDL_MC,+1,-1*IC(2),W(1,3))  !  count 196
      CALL OXXXXX(P(0,2),MDL_MC,-1,-1*IC(2),W(1,4))  !  count 196
      CALL OXXXXX(P(0,3),MDL_MC,+1,+1*IC(3),W(1,5))  !  count 2
      CALL OXXXXX(P(0,3),MDL_MC,-1,+1*IC(3),W(1,6))  !  count 2
      CALL IXXXXX(P(0,4),MDL_MC,+1,-1*IC(4),W(1,7))  !  count 2
      CALL IXXXXX(P(0,4),MDL_MC,-1,-1*IC(4),W(1,8))  !  count 2
      CALL FFS4_3(W(1,7),W(1,5),GC_84,MDL_MH,FK_MDL_WH,W(1,9))  !  count 72
      CALL FFS4_3(W(1,7),W(1,6),GC_84,MDL_MH,FK_MDL_WH,W(1,10))  !  count 64
      CALL FFS4_3(W(1,8),W(1,5),GC_84,MDL_MH,FK_MDL_WH,W(1,11))  !  count 64
      CALL FFS4_3(W(1,8),W(1,6),GC_84,MDL_MH,FK_MDL_WH,W(1,12))  !  count 72
      CALL IXXXXX(P(0,5),MDL_MC,+1,-1*IC(5),W(1,13))  !  count 196
      CALL IXXXXX(P(0,5),MDL_MC,-1,-1*IC(5),W(1,14))  !  count 196
      CALL IXXXXX(P(0,6),MDL_MC,+1,-1*IC(6),W(1,15))  !  count 196
      CALL IXXXXX(P(0,6),MDL_MC,-1,-1*IC(6),W(1,16))  !  count 196
      CALL FFS4_2(W(1,13),W(1,9),GC_84,MDL_MC,FK_ZERO,W(1,17))  !  count 48
      CALL FFS4_2(W(1,13),W(1,10),GC_84,MDL_MC,FK_ZERO,W(1,18))  !  count 42
      CALL FFS4_2(W(1,13),W(1,11),GC_84,MDL_MC,FK_ZERO,W(1,19))  !  count 42
      CALL FFS4_2(W(1,13),W(1,12),GC_84,MDL_MC,FK_ZERO,W(1,20))  !  count 48
      CALL FFS4_2(W(1,14),W(1,9),GC_84,MDL_MC,FK_ZERO,W(1,21))  !  count 48
      CALL FFS4_2(W(1,14),W(1,10),GC_84,MDL_MC,FK_ZERO,W(1,22))  !  count 42
      CALL FFS4_2(W(1,14),W(1,11),GC_84,MDL_MC,FK_ZERO,W(1,23))  !  count 42
      CALL FFS4_2(W(1,14),W(1,12),GC_84,MDL_MC,FK_ZERO,W(1,24))  !  count 48
      CALL FFV1P0_3(W(1,15),W(1,1),GC_2,ZERO,FK_ZERO,W(1,25))  !  count 32
      CALL FFV1P0_3(W(1,15),W(1,2),GC_2,ZERO,FK_ZERO,W(1,26))  !  count 28
      CALL FFV1P0_3(W(1,16),W(1,1),GC_2,ZERO,FK_ZERO,W(1,27))  !  count 28
      CALL FFV1P0_3(W(1,16),W(1,2),GC_2,ZERO,FK_ZERO,W(1,28))  !  count 32
      CALL FFV1P1N_1(W(1,3), W(1,25), GC_2, TMP(1))
      call CombineAmp(8,
     & (/54,47,58,50,56,49,60,52/), 
     & (/17,18,19,20,21,22,23,24/),
     & TMP, W, AMP(1,1))
      CALL FFV1P1N_1(W(1,3), W(1,26), GC_2, TMP(1))
      call CombineAmp(8,
     & (/23,15,27,19,25,17,29,21/), 
     & (/17,18,19,20,21,22,23,24/),
     & TMP, W, AMP(1,1))
      CALL FFV1P1N_1(W(1,3), W(1,27), GC_2, TMP(1))
      call CombineAmp(6,
     & (/55,48,59,51,57,53/), 
     & (/17,18,19,20,21,24/),
     & TMP, W, AMP(1,1))
      CALL FFV1P1N_1(W(1,3), W(1,28), GC_2, TMP(1))
      call CombineAmp(8,
     & (/24,16,28,20,26,18,30,22/), 
     & (/17,18,19,20,21,22,23,24/),
     & TMP, W, AMP(1,1))
      CALL FFV1P1N_1(W(1,4), W(1,25), GC_2, TMP(1))
      call CombineAmp(8,
     & (/39,31,43,35,41,33,45,37/), 
     & (/17,18,19,20,21,22,23,24/),
     & TMP, W, AMP(1,1))
      CALL FFV1P1N_1(W(1,4), W(1,26), GC_2, TMP(1))
      call CombineAmp(6,
     & (/8,4,10,2,13,6/), 
     & (/17,20,21,22,23,24/),
     & TMP, W, AMP(1,1))
      CALL FFV1P1N_1(W(1,4), W(1,27), GC_2, TMP(1))
      call CombineAmp(8,
     & (/40,32,44,36,42,34,46,38/), 
     & (/17,18,19,20,21,22,23,24/),
     & TMP, W, AMP(1,1))
      CALL FFV1P1N_1(W(1,4), W(1,28), GC_2, TMP(1))
      call CombineAmp(8,
     & (/9,1,12,5,11,3,14,7/), 
     & (/17,18,19,20,21,22,23,24/),
     & TMP, W, AMP(1,1))  !  count 1
      CALL FFS4_3(W(1,15),W(1,1),GC_84,MDL_MH,ZERO,W(1,29))  !  count 48
      CALL FFS4_3(W(1,15),W(1,2),GC_84,MDL_MH,ZERO,W(1,30))  !  count 42
      CALL FFS4_3(W(1,16),W(1,1),GC_84,MDL_MH,ZERO,W(1,31))  !  count 42
      CALL FFS4_3(W(1,16),W(1,2),GC_84,MDL_MH,ZERO,W(1,32))  !  count 48
      CALL FFS4P1N_1(W(1,3), W(1,29), GC_84, TMP(1))
      call CombineAmp(8,
     & (/54,47,58,50,56,49,60,52/), 
     & (/17,18,19,20,21,22,23,24/),
     & TMP, W, AMP(1,2))
      CALL FFS4P1N_1(W(1,3), W(1,30), GC_84, TMP(1))
      call CombineAmp(8,
     & (/23,15,27,19,25,17,29,21/), 
     & (/17,18,19,20,21,22,23,24/),
     & TMP, W, AMP(1,2))
      CALL FFS4P1N_1(W(1,3), W(1,31), GC_84, TMP(1))
      call CombineAmp(6,
     & (/55,48,59,51,57,53/), 
     & (/17,18,19,20,21,24/),
     & TMP, W, AMP(1,2))
      CALL FFS4P1N_1(W(1,3), W(1,32), GC_84, TMP(1))
      call CombineAmp(8,
     & (/24,16,28,20,26,18,30,22/), 
     & (/17,18,19,20,21,22,23,24/),
     & TMP, W, AMP(1,2))
      CALL FFS4P1N_1(W(1,4), W(1,29), GC_84, TMP(1))
      call CombineAmp(8,
     & (/39,31,43,35,41,33,45,37/), 
     & (/17,18,19,20,21,22,23,24/),
     & TMP, W, AMP(1,2))
      CALL FFS4P1N_1(W(1,4), W(1,30), GC_84, TMP(1))
      call CombineAmp(6,
     & (/8,4,10,2,13,6/), 
     & (/17,20,21,22,23,24/),
     & TMP, W, AMP(1,2))
      CALL FFS4P1N_1(W(1,4), W(1,31), GC_84, TMP(1))
      call CombineAmp(8,
     & (/40,32,44,36,42,34,46,38/), 
     & (/17,18,19,20,21,22,23,24/),
     & TMP, W, AMP(1,2))
      CALL FFS4P1N_1(W(1,4), W(1,32), GC_84, TMP(1))
      call CombineAmp(8,
     & (/9,1,12,5,11,3,14,7/), 
     & (/17,18,19,20,21,22,23,24/),
     & TMP, W, AMP(1,2))  !  count 1
      CALL FFV2_5_3(W(1,15),W(1,1),GC_51,GC_58,MDL_MZ,ZERO,W(1,33))  !  count 48
      CALL FFV2_5_3(W(1,15),W(1,2),GC_51,GC_58,MDL_MZ,ZERO,W(1,34))  !  count 42
      CALL FFV2_5_3(W(1,16),W(1,1),GC_51,GC_58,MDL_MZ,ZERO,W(1,35))  !  count 42
      CALL FFV2_5_3(W(1,16),W(1,2),GC_51,GC_58,MDL_MZ,ZERO,W(1,36))  !  count 48
      CALL FFV2_5P1N_1(W(1,3), W(1,33), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/54,47,58,50,56,49,60,52/), 
     & (/17,18,19,20,21,22,23,24/),
     & TMP, W, AMP(1,3))
      CALL FFV2_5P1N_1(W(1,3), W(1,34), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/23,15,27,19,25,17,29,21/), 
     & (/17,18,19,20,21,22,23,24/),
     & TMP, W, AMP(1,3))
      CALL FFV2_5P1N_1(W(1,3), W(1,35), GC_51, GC_58, TMP(1))
      call CombineAmp(6,
     & (/55,48,59,51,57,53/), 
     & (/17,18,19,20,21,24/),
     & TMP, W, AMP(1,3))
      CALL FFV2_5P1N_1(W(1,3), W(1,36), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/24,16,28,20,26,18,30,22/), 
     & (/17,18,19,20,21,22,23,24/),
     & TMP, W, AMP(1,3))
      CALL FFV2_5P1N_1(W(1,4), W(1,33), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/39,31,43,35,41,33,45,37/), 
     & (/17,18,19,20,21,22,23,24/),
     & TMP, W, AMP(1,3))
      CALL FFV2_5P1N_1(W(1,4), W(1,34), GC_51, GC_58, TMP(1))
      call CombineAmp(6,
     & (/8,4,10,2,13,6/), 
     & (/17,20,21,22,23,24/),
     & TMP, W, AMP(1,3))
      CALL FFV2_5P1N_1(W(1,4), W(1,35), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/40,32,44,36,42,34,46,38/), 
     & (/17,18,19,20,21,22,23,24/),
     & TMP, W, AMP(1,3))
      CALL FFV2_5P1N_1(W(1,4), W(1,36), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/9,1,12,5,11,3,14,7/), 
     & (/17,18,19,20,21,22,23,24/),
     & TMP, W, AMP(1,3))  !  count 1
      CALL FFV1P0_3(W(1,15),W(1,3),GC_2,ZERO,FK_ZERO,W(1,37))  !  count 32
      CALL FFV1P0_3(W(1,15),W(1,4),GC_2,ZERO,FK_ZERO,W(1,38))  !  count 28
      CALL FFV1P0_3(W(1,16),W(1,3),GC_2,ZERO,FK_ZERO,W(1,39))  !  count 28
      CALL FFV1P0_3(W(1,16),W(1,4),GC_2,ZERO,FK_ZERO,W(1,40))  !  count 32
      CALL FFV1P1N_1(W(1,1), W(1,37), GC_2, TMP(1))
      call CombineAmp(8,
     & (/54,47,58,50,56,49,60,52/), 
     & (/17,18,19,20,21,22,23,24/),
     & TMP, W, AMP(1,4))
      CALL FFV1P1N_1(W(1,1), W(1,38), GC_2, TMP(1))
      call CombineAmp(8,
     & (/39,31,43,35,41,33,45,37/), 
     & (/17,18,19,20,21,22,23,24/),
     & TMP, W, AMP(1,4))
      CALL FFV1P1N_1(W(1,1), W(1,39), GC_2, TMP(1))
      call CombineAmp(6,
     & (/55,48,59,51,57,53/), 
     & (/17,18,19,20,21,24/),
     & TMP, W, AMP(1,4))
      CALL FFV1P1N_1(W(1,1), W(1,40), GC_2, TMP(1))
      call CombineAmp(8,
     & (/40,32,44,36,42,34,46,38/), 
     & (/17,18,19,20,21,22,23,24/),
     & TMP, W, AMP(1,4))
      CALL FFV1P1N_1(W(1,2), W(1,37), GC_2, TMP(1))
      call CombineAmp(8,
     & (/23,15,27,19,25,17,29,21/), 
     & (/17,18,19,20,21,22,23,24/),
     & TMP, W, AMP(1,4))
      CALL FFV1P1N_1(W(1,2), W(1,38), GC_2, TMP(1))
      call CombineAmp(6,
     & (/8,4,10,2,13,6/), 
     & (/17,20,21,22,23,24/),
     & TMP, W, AMP(1,4))
      CALL FFV1P1N_1(W(1,2), W(1,39), GC_2, TMP(1))
      call CombineAmp(8,
     & (/24,16,28,20,26,18,30,22/), 
     & (/17,18,19,20,21,22,23,24/),
     & TMP, W, AMP(1,4))
      CALL FFV1P1N_1(W(1,2), W(1,40), GC_2, TMP(1))
      call CombineAmp(8,
     & (/9,1,12,5,11,3,14,7/), 
     & (/17,18,19,20,21,22,23,24/),
     & TMP, W, AMP(1,4))  !  count 1
      CALL FFS4_3(W(1,15),W(1,3),GC_84,MDL_MH,ZERO,W(1,41))  !  count 48
      CALL FFS4_3(W(1,15),W(1,4),GC_84,MDL_MH,ZERO,W(1,42))  !  count 42
      CALL FFS4_3(W(1,16),W(1,3),GC_84,MDL_MH,ZERO,W(1,43))  !  count 42
      CALL FFS4_3(W(1,16),W(1,4),GC_84,MDL_MH,ZERO,W(1,44))  !  count 48
      CALL FFS4P1N_1(W(1,1), W(1,41), GC_84, TMP(1))
      call CombineAmp(8,
     & (/54,47,58,50,56,49,60,52/), 
     & (/17,18,19,20,21,22,23,24/),
     & TMP, W, AMP(1,5))
      CALL FFS4P1N_1(W(1,1), W(1,42), GC_84, TMP(1))
      call CombineAmp(8,
     & (/39,31,43,35,41,33,45,37/), 
     & (/17,18,19,20,21,22,23,24/),
     & TMP, W, AMP(1,5))
      CALL FFS4P1N_1(W(1,1), W(1,43), GC_84, TMP(1))
      call CombineAmp(6,
     & (/55,48,59,51,57,53/), 
     & (/17,18,19,20,21,24/),
     & TMP, W, AMP(1,5))
      CALL FFS4P1N_1(W(1,1), W(1,44), GC_84, TMP(1))
      call CombineAmp(8,
     & (/40,32,44,36,42,34,46,38/), 
     & (/17,18,19,20,21,22,23,24/),
     & TMP, W, AMP(1,5))
      CALL FFS4P1N_1(W(1,2), W(1,41), GC_84, TMP(1))
      call CombineAmp(8,
     & (/23,15,27,19,25,17,29,21/), 
     & (/17,18,19,20,21,22,23,24/),
     & TMP, W, AMP(1,5))
      CALL FFS4P1N_1(W(1,2), W(1,42), GC_84, TMP(1))
      call CombineAmp(6,
     & (/8,4,10,2,13,6/), 
     & (/17,20,21,22,23,24/),
     & TMP, W, AMP(1,5))
      CALL FFS4P1N_1(W(1,2), W(1,43), GC_84, TMP(1))
      call CombineAmp(8,
     & (/24,16,28,20,26,18,30,22/), 
     & (/17,18,19,20,21,22,23,24/),
     & TMP, W, AMP(1,5))
      CALL FFS4P1N_1(W(1,2), W(1,44), GC_84, TMP(1))
      call CombineAmp(8,
     & (/9,1,12,5,11,3,14,7/), 
     & (/17,18,19,20,21,22,23,24/),
     & TMP, W, AMP(1,5))  !  count 1
      CALL FFV2_5_3(W(1,15),W(1,3),GC_51,GC_58,MDL_MZ,ZERO,W(1,45))  !  count 48
      CALL FFV2_5_3(W(1,15),W(1,4),GC_51,GC_58,MDL_MZ,ZERO,W(1,46))  !  count 42
      CALL FFV2_5_3(W(1,16),W(1,3),GC_51,GC_58,MDL_MZ,ZERO,W(1,47))  !  count 42
      CALL FFV2_5_3(W(1,16),W(1,4),GC_51,GC_58,MDL_MZ,ZERO,W(1,48))  !  count 48
      CALL FFV2_5P1N_1(W(1,1), W(1,45), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/54,47,58,50,56,49,60,52/), 
     & (/17,18,19,20,21,22,23,24/),
     & TMP, W, AMP(1,6))
      CALL FFV2_5P1N_1(W(1,1), W(1,46), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/39,31,43,35,41,33,45,37/), 
     & (/17,18,19,20,21,22,23,24/),
     & TMP, W, AMP(1,6))
      CALL FFV2_5P1N_1(W(1,1), W(1,47), GC_51, GC_58, TMP(1))
      call CombineAmp(6,
     & (/55,48,59,51,57,53/), 
     & (/17,18,19,20,21,24/),
     & TMP, W, AMP(1,6))
      CALL FFV2_5P1N_1(W(1,1), W(1,48), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/40,32,44,36,42,34,46,38/), 
     & (/17,18,19,20,21,22,23,24/),
     & TMP, W, AMP(1,6))
      CALL FFV2_5P1N_1(W(1,2), W(1,45), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/23,15,27,19,25,17,29,21/), 
     & (/17,18,19,20,21,22,23,24/),
     & TMP, W, AMP(1,6))
      CALL FFV2_5P1N_1(W(1,2), W(1,46), GC_51, GC_58, TMP(1))
      call CombineAmp(6,
     & (/8,4,10,2,13,6/), 
     & (/17,20,21,22,23,24/),
     & TMP, W, AMP(1,6))
      CALL FFV2_5P1N_1(W(1,2), W(1,47), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/24,16,28,20,26,18,30,22/), 
     & (/17,18,19,20,21,22,23,24/),
     & TMP, W, AMP(1,6))
      CALL FFV2_5P1N_1(W(1,2), W(1,48), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/9,1,12,5,11,3,14,7/), 
     & (/17,18,19,20,21,22,23,24/),
     & TMP, W, AMP(1,6))  !  count 1
      CALL FFV1P0_3(W(1,13),W(1,1),GC_2,ZERO,FK_ZERO,W(1,49))  !  count 32
      CALL FFV1P0_3(W(1,13),W(1,2),GC_2,ZERO,FK_ZERO,W(1,50))  !  count 28
      CALL FFV1P0_3(W(1,14),W(1,1),GC_2,ZERO,FK_ZERO,W(1,51))  !  count 28
      CALL FFV1P0_3(W(1,14),W(1,2),GC_2,ZERO,FK_ZERO,W(1,52))  !  count 32
      CALL FFS4_2(W(1,15),W(1,9),GC_84,MDL_MC,FK_ZERO,W(1,53))  !  count 48
      CALL FFS4_2(W(1,15),W(1,10),GC_84,MDL_MC,FK_ZERO,W(1,54))  !  count 42
      CALL FFS4_2(W(1,15),W(1,11),GC_84,MDL_MC,FK_ZERO,W(1,55))  !  count 42
      CALL FFS4_2(W(1,15),W(1,12),GC_84,MDL_MC,FK_ZERO,W(1,56))  !  count 48
      CALL FFS4_2(W(1,16),W(1,9),GC_84,MDL_MC,FK_ZERO,W(1,57))  !  count 48
      CALL FFS4_2(W(1,16),W(1,10),GC_84,MDL_MC,FK_ZERO,W(1,58))  !  count 42
      CALL FFS4_2(W(1,16),W(1,11),GC_84,MDL_MC,FK_ZERO,W(1,59))  !  count 42
      CALL FFS4_2(W(1,16),W(1,12),GC_84,MDL_MC,FK_ZERO,W(1,60))  !  count 48
      CALL FFV1P1N_1(W(1,3), W(1,49), GC_2, TMP(1))
      call CombineAmp(8,
     & (/54,47,58,50,55,48,59,51/), 
     & (/53,54,55,56,57,58,59,60/),
     & TMP, W, AMP(1,7))
      CALL FFV1P1N_1(W(1,3), W(1,50), GC_2, TMP(1))
      call CombineAmp(8,
     & (/23,15,27,19,24,16,28,20/), 
     & (/53,54,55,56,57,58,59,60/),
     & TMP, W, AMP(1,7))
      CALL FFV1P1N_1(W(1,3), W(1,51), GC_2, TMP(1))
      call CombineAmp(6,
     & (/56,49,60,52,57,53/), 
     & (/53,54,55,56,57,60/),
     & TMP, W, AMP(1,7))
      CALL FFV1P1N_1(W(1,3), W(1,52), GC_2, TMP(1))
      call CombineAmp(8,
     & (/25,17,29,21,26,18,30,22/), 
     & (/53,54,55,56,57,58,59,60/),
     & TMP, W, AMP(1,7))
      CALL FFV1P1N_1(W(1,4), W(1,49), GC_2, TMP(1))
      call CombineAmp(8,
     & (/39,31,43,35,40,32,44,36/), 
     & (/53,54,55,56,57,58,59,60/),
     & TMP, W, AMP(1,7))
      CALL FFV1P1N_1(W(1,4), W(1,50), GC_2, TMP(1))
      call CombineAmp(6,
     & (/8,4,9,1,12,5/), 
     & (/53,56,57,58,59,60/),
     & TMP, W, AMP(1,7))
      CALL FFV1P1N_1(W(1,4), W(1,51), GC_2, TMP(1))
      call CombineAmp(8,
     & (/41,33,45,37,42,34,46,38/), 
     & (/53,54,55,56,57,58,59,60/),
     & TMP, W, AMP(1,7))
      CALL FFV1P1N_1(W(1,4), W(1,52), GC_2, TMP(1))
      call CombineAmp(8,
     & (/10,2,13,6,11,3,14,7/), 
     & (/53,54,55,56,57,58,59,60/),
     & TMP, W, AMP(1,7))  !  count 1
      CALL FFS4_3(W(1,13),W(1,1),GC_84,MDL_MH,ZERO,W(1,61))  !  count 48
      CALL FFS4_3(W(1,13),W(1,2),GC_84,MDL_MH,ZERO,W(1,62))  !  count 42
      CALL FFS4_3(W(1,14),W(1,1),GC_84,MDL_MH,ZERO,W(1,63))  !  count 42
      CALL FFS4_3(W(1,14),W(1,2),GC_84,MDL_MH,ZERO,W(1,64))  !  count 48
      CALL FFS4P1N_1(W(1,3), W(1,61), GC_84, TMP(1))
      call CombineAmp(8,
     & (/54,47,58,50,55,48,59,51/), 
     & (/53,54,55,56,57,58,59,60/),
     & TMP, W, AMP(1,8))
      CALL FFS4P1N_1(W(1,3), W(1,62), GC_84, TMP(1))
      call CombineAmp(8,
     & (/23,15,27,19,24,16,28,20/), 
     & (/53,54,55,56,57,58,59,60/),
     & TMP, W, AMP(1,8))
      CALL FFS4P1N_1(W(1,3), W(1,63), GC_84, TMP(1))
      call CombineAmp(6,
     & (/56,49,60,52,57,53/), 
     & (/53,54,55,56,57,60/),
     & TMP, W, AMP(1,8))
      CALL FFS4P1N_1(W(1,3), W(1,64), GC_84, TMP(1))
      call CombineAmp(8,
     & (/25,17,29,21,26,18,30,22/), 
     & (/53,54,55,56,57,58,59,60/),
     & TMP, W, AMP(1,8))
      CALL FFS4P1N_1(W(1,4), W(1,61), GC_84, TMP(1))
      call CombineAmp(8,
     & (/39,31,43,35,40,32,44,36/), 
     & (/53,54,55,56,57,58,59,60/),
     & TMP, W, AMP(1,8))
      CALL FFS4P1N_1(W(1,4), W(1,62), GC_84, TMP(1))
      call CombineAmp(6,
     & (/8,4,9,1,12,5/), 
     & (/53,56,57,58,59,60/),
     & TMP, W, AMP(1,8))
      CALL FFS4P1N_1(W(1,4), W(1,63), GC_84, TMP(1))
      call CombineAmp(8,
     & (/41,33,45,37,42,34,46,38/), 
     & (/53,54,55,56,57,58,59,60/),
     & TMP, W, AMP(1,8))
      CALL FFS4P1N_1(W(1,4), W(1,64), GC_84, TMP(1))
      call CombineAmp(8,
     & (/10,2,13,6,11,3,14,7/), 
     & (/53,54,55,56,57,58,59,60/),
     & TMP, W, AMP(1,8))  !  count 1
      CALL FFV2_5_3(W(1,13),W(1,1),GC_51,GC_58,MDL_MZ,ZERO,W(1,65))  !  count 48
      CALL FFV2_5_3(W(1,13),W(1,2),GC_51,GC_58,MDL_MZ,ZERO,W(1,66))  !  count 42
      CALL FFV2_5_3(W(1,14),W(1,1),GC_51,GC_58,MDL_MZ,ZERO,W(1,67))  !  count 42
      CALL FFV2_5_3(W(1,14),W(1,2),GC_51,GC_58,MDL_MZ,ZERO,W(1,68))  !  count 48
      CALL FFV2_5P1N_1(W(1,3), W(1,65), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/54,47,58,50,55,48,59,51/), 
     & (/53,54,55,56,57,58,59,60/),
     & TMP, W, AMP(1,9))
      CALL FFV2_5P1N_1(W(1,3), W(1,66), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/23,15,27,19,24,16,28,20/), 
     & (/53,54,55,56,57,58,59,60/),
     & TMP, W, AMP(1,9))
      CALL FFV2_5P1N_1(W(1,3), W(1,67), GC_51, GC_58, TMP(1))
      call CombineAmp(6,
     & (/56,49,60,52,57,53/), 
     & (/53,54,55,56,57,60/),
     & TMP, W, AMP(1,9))
      CALL FFV2_5P1N_1(W(1,3), W(1,68), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/25,17,29,21,26,18,30,22/), 
     & (/53,54,55,56,57,58,59,60/),
     & TMP, W, AMP(1,9))
      CALL FFV2_5P1N_1(W(1,4), W(1,65), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/39,31,43,35,40,32,44,36/), 
     & (/53,54,55,56,57,58,59,60/),
     & TMP, W, AMP(1,9))
      CALL FFV2_5P1N_1(W(1,4), W(1,66), GC_51, GC_58, TMP(1))
      call CombineAmp(6,
     & (/8,4,9,1,12,5/), 
     & (/53,56,57,58,59,60/),
     & TMP, W, AMP(1,9))
      CALL FFV2_5P1N_1(W(1,4), W(1,67), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/41,33,45,37,42,34,46,38/), 
     & (/53,54,55,56,57,58,59,60/),
     & TMP, W, AMP(1,9))
      CALL FFV2_5P1N_1(W(1,4), W(1,68), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/10,2,13,6,11,3,14,7/), 
     & (/53,54,55,56,57,58,59,60/),
     & TMP, W, AMP(1,9))  !  count 1
      CALL SSS1P1N_1(W(1,41), W(1,9), GC_69, TMP(1))
      call CombineAmpS(4, 
     &(/54,23,56,25/), 
     & (/61,62,63,64/), 
     & TMP, W, AMP(1,10))
      CALL SSS1P1N_1(W(1,41), W(1,10), GC_69, TMP(1))
      call CombineAmpS(4, 
     &(/47,15,49,17/), 
     & (/61,62,63,64/), 
     & TMP, W, AMP(1,10))
      CALL SSS1P1N_1(W(1,41), W(1,11), GC_69, TMP(1))
      call CombineAmpS(4, 
     &(/58,27,60,29/), 
     & (/61,62,63,64/), 
     & TMP, W, AMP(1,10))
      CALL SSS1P1N_1(W(1,41), W(1,12), GC_69, TMP(1))
      call CombineAmpS(4, 
     &(/50,19,52,21/), 
     & (/61,62,63,64/), 
     & TMP, W, AMP(1,10))
      CALL SSS1P1N_1(W(1,42), W(1,9), GC_69, TMP(1))
      call CombineAmpS(4, 
     &(/39,8,41,10/), 
     & (/61,62,63,64/), 
     & TMP, W, AMP(1,10))
      CALL SSS1P1N_1(W(1,42), W(1,10), GC_69, TMP(1))
      call CombineAmpS(3, 
     &(/31,33,2/), 
     & (/61,63,64/), 
     & TMP, W, AMP(1,10))
      CALL SSS1P1N_1(W(1,42), W(1,11), GC_69, TMP(1))
      call CombineAmpS(3, 
     &(/43,45,13/), 
     & (/61,63,64/), 
     & TMP, W, AMP(1,10))
      CALL SSS1P1N_1(W(1,42), W(1,12), GC_69, TMP(1))
      call CombineAmpS(4, 
     &(/35,4,37,6/), 
     & (/61,62,63,64/), 
     & TMP, W, AMP(1,10))
      CALL SSS1P1N_1(W(1,43), W(1,9), GC_69, TMP(1))
      call CombineAmpS(4, 
     &(/55,24,57,26/), 
     & (/61,62,63,64/), 
     & TMP, W, AMP(1,10))
      CALL SSS1P1N_1(W(1,43), W(1,10), GC_69, TMP(1))
      call CombineAmpS(3, 
     &(/48,16,18/), 
     & (/61,62,64/), 
     & TMP, W, AMP(1,10))
      CALL SSS1P1N_1(W(1,43), W(1,11), GC_69, TMP(1))
      call CombineAmpS(3, 
     &(/59,28,30/), 
     & (/61,62,64/), 
     & TMP, W, AMP(1,10))
      CALL SSS1P1N_1(W(1,43), W(1,12), GC_69, TMP(1))
      call CombineAmpS(4, 
     &(/51,20,53,22/), 
     & (/61,62,63,64/), 
     & TMP, W, AMP(1,10))
      CALL SSS1P1N_1(W(1,44), W(1,9), GC_69, TMP(1))
      call CombineAmpS(4, 
     &(/40,9,42,11/), 
     & (/61,62,63,64/), 
     & TMP, W, AMP(1,10))
      CALL SSS1P1N_1(W(1,44), W(1,10), GC_69, TMP(1))
      call CombineAmpS(4, 
     &(/32,1,34,3/), 
     & (/61,62,63,64/), 
     & TMP, W, AMP(1,10))
      CALL SSS1P1N_1(W(1,44), W(1,11), GC_69, TMP(1))
      call CombineAmpS(4, 
     &(/44,12,46,14/), 
     & (/61,62,63,64/), 
     & TMP, W, AMP(1,10))
      CALL SSS1P1N_1(W(1,44), W(1,12), GC_69, TMP(1))
      call CombineAmpS(4, 
     &(/36,5,38,7/), 
     & (/61,62,63,64/), 
     & TMP, W, AMP(1,10))  !  count 1
      CALL VVS1P1N_1(W(1,45), W(1,9), GC_81, TMP(1))
      call CombineAmp(4,
     & (/54,23,56,25/), 
     & (/65,66,67,68/),
     & TMP, W, AMP(1,11))
      CALL VVS1P1N_1(W(1,45), W(1,10), GC_81, TMP(1))
      call CombineAmp(4,
     & (/47,15,49,17/), 
     & (/65,66,67,68/),
     & TMP, W, AMP(1,11))
      CALL VVS1P1N_1(W(1,45), W(1,11), GC_81, TMP(1))
      call CombineAmp(4,
     & (/58,27,60,29/), 
     & (/65,66,67,68/),
     & TMP, W, AMP(1,11))
      CALL VVS1P1N_1(W(1,45), W(1,12), GC_81, TMP(1))
      call CombineAmp(4,
     & (/50,19,52,21/), 
     & (/65,66,67,68/),
     & TMP, W, AMP(1,11))
      CALL VVS1P1N_1(W(1,46), W(1,9), GC_81, TMP(1))
      call CombineAmp(4,
     & (/39,8,41,10/), 
     & (/65,66,67,68/),
     & TMP, W, AMP(1,11))
      CALL VVS1P1N_1(W(1,46), W(1,10), GC_81, TMP(1))
      call CombineAmp(3,
     & (/31,33,2/), 
     & (/65,67,68/),
     & TMP, W, AMP(1,11))
      CALL VVS1P1N_1(W(1,46), W(1,11), GC_81, TMP(1))
      call CombineAmp(3,
     & (/43,45,13/), 
     & (/65,67,68/),
     & TMP, W, AMP(1,11))
      CALL VVS1P1N_1(W(1,46), W(1,12), GC_81, TMP(1))
      call CombineAmp(4,
     & (/35,4,37,6/), 
     & (/65,66,67,68/),
     & TMP, W, AMP(1,11))
      CALL VVS1P1N_1(W(1,47), W(1,9), GC_81, TMP(1))
      call CombineAmp(4,
     & (/55,24,57,26/), 
     & (/65,66,67,68/),
     & TMP, W, AMP(1,11))
      CALL VVS1P1N_1(W(1,47), W(1,10), GC_81, TMP(1))
      call CombineAmp(3,
     & (/48,16,18/), 
     & (/65,66,68/),
     & TMP, W, AMP(1,11))
      CALL VVS1P1N_1(W(1,47), W(1,11), GC_81, TMP(1))
      call CombineAmp(3,
     & (/59,28,30/), 
     & (/65,66,68/),
     & TMP, W, AMP(1,11))
      CALL VVS1P1N_1(W(1,47), W(1,12), GC_81, TMP(1))
      call CombineAmp(4,
     & (/51,20,53,22/), 
     & (/65,66,67,68/),
     & TMP, W, AMP(1,11))
      CALL VVS1P1N_1(W(1,48), W(1,9), GC_81, TMP(1))
      call CombineAmp(4,
     & (/40,9,42,11/), 
     & (/65,66,67,68/),
     & TMP, W, AMP(1,11))
      CALL VVS1P1N_1(W(1,48), W(1,10), GC_81, TMP(1))
      call CombineAmp(4,
     & (/32,1,34,3/), 
     & (/65,66,67,68/),
     & TMP, W, AMP(1,11))
      CALL VVS1P1N_1(W(1,48), W(1,11), GC_81, TMP(1))
      call CombineAmp(4,
     & (/44,12,46,14/), 
     & (/65,66,67,68/),
     & TMP, W, AMP(1,11))
      CALL VVS1P1N_1(W(1,48), W(1,12), GC_81, TMP(1))
      call CombineAmp(4,
     & (/36,5,38,7/), 
     & (/65,66,67,68/),
     & TMP, W, AMP(1,11))  !  count 1
      CALL FFS4_1(W(1,3),W(1,9),GC_84,MDL_MC,FK_ZERO,W(1,69))  !  count 48
      CALL FFS4_1(W(1,3),W(1,10),GC_84,MDL_MC,FK_ZERO,W(1,70))  !  count 42
      CALL FFS4_1(W(1,3),W(1,11),GC_84,MDL_MC,FK_ZERO,W(1,71))  !  count 42
      CALL FFS4_1(W(1,3),W(1,12),GC_84,MDL_MC,FK_ZERO,W(1,72))  !  count 48
      CALL FFS4_1(W(1,4),W(1,9),GC_84,MDL_MC,FK_ZERO,W(1,73))  !  count 48
      CALL FFS4_1(W(1,4),W(1,10),GC_84,MDL_MC,FK_ZERO,W(1,74))  !  count 42
      CALL FFS4_1(W(1,4),W(1,11),GC_84,MDL_MC,FK_ZERO,W(1,75))  !  count 42
      CALL FFS4_1(W(1,4),W(1,12),GC_84,MDL_MC,FK_ZERO,W(1,76))  !  count 48
      CALL FFV1P1N_2(W(1,15), W(1,49), GC_2, TMP(1))
      call CombineAmp(8,
     & (/54,47,58,50,39,31,43,35/), 
     & (/69,70,71,72,73,74,75,76/),
     & TMP, W, AMP(1,12))
      CALL FFV1P1N_2(W(1,15), W(1,50), GC_2, TMP(1))
      call CombineAmp(6,
     & (/23,15,27,19,8,4/), 
     & (/69,70,71,72,73,76/),
     & TMP, W, AMP(1,12))
      CALL FFV1P1N_2(W(1,15), W(1,51), GC_2, TMP(1))
      call CombineAmp(8,
     & (/56,49,60,52,41,33,45,37/), 
     & (/69,70,71,72,73,74,75,76/),
     & TMP, W, AMP(1,12))
      CALL FFV1P1N_2(W(1,15), W(1,52), GC_2, TMP(1))
      call CombineAmp(8,
     & (/25,17,29,21,10,2,13,6/), 
     & (/69,70,71,72,73,74,75,76/),
     & TMP, W, AMP(1,12))
      CALL FFV1P1N_2(W(1,16), W(1,49), GC_2, TMP(1))
      call CombineAmp(8,
     & (/55,48,59,51,40,32,44,36/), 
     & (/69,70,71,72,73,74,75,76/),
     & TMP, W, AMP(1,12))
      CALL FFV1P1N_2(W(1,16), W(1,50), GC_2, TMP(1))
      call CombineAmp(8,
     & (/24,16,28,20,9,1,12,5/), 
     & (/69,70,71,72,73,74,75,76/),
     & TMP, W, AMP(1,12))
      CALL FFV1P1N_2(W(1,16), W(1,51), GC_2, TMP(1))
      call CombineAmp(6,
     & (/57,53,42,34,46,38/), 
     & (/69,72,73,74,75,76/),
     & TMP, W, AMP(1,12))
      CALL FFV1P1N_2(W(1,16), W(1,52), GC_2, TMP(1))
      call CombineAmp(8,
     & (/26,18,30,22,11,3,14,7/), 
     & (/69,70,71,72,73,74,75,76/),
     & TMP, W, AMP(1,12))  !  count 1
      CALL FFS4P1N_2(W(1,15), W(1,61), GC_84, TMP(1))
      call CombineAmp(8,
     & (/54,47,58,50,39,31,43,35/), 
     & (/69,70,71,72,73,74,75,76/),
     & TMP, W, AMP(1,13))
      CALL FFS4P1N_2(W(1,15), W(1,62), GC_84, TMP(1))
      call CombineAmp(6,
     & (/23,15,27,19,8,4/), 
     & (/69,70,71,72,73,76/),
     & TMP, W, AMP(1,13))
      CALL FFS4P1N_2(W(1,15), W(1,63), GC_84, TMP(1))
      call CombineAmp(8,
     & (/56,49,60,52,41,33,45,37/), 
     & (/69,70,71,72,73,74,75,76/),
     & TMP, W, AMP(1,13))
      CALL FFS4P1N_2(W(1,15), W(1,64), GC_84, TMP(1))
      call CombineAmp(8,
     & (/25,17,29,21,10,2,13,6/), 
     & (/69,70,71,72,73,74,75,76/),
     & TMP, W, AMP(1,13))
      CALL FFS4P1N_2(W(1,16), W(1,61), GC_84, TMP(1))
      call CombineAmp(8,
     & (/55,48,59,51,40,32,44,36/), 
     & (/69,70,71,72,73,74,75,76/),
     & TMP, W, AMP(1,13))
      CALL FFS4P1N_2(W(1,16), W(1,62), GC_84, TMP(1))
      call CombineAmp(8,
     & (/24,16,28,20,9,1,12,5/), 
     & (/69,70,71,72,73,74,75,76/),
     & TMP, W, AMP(1,13))
      CALL FFS4P1N_2(W(1,16), W(1,63), GC_84, TMP(1))
      call CombineAmp(6,
     & (/57,53,42,34,46,38/), 
     & (/69,72,73,74,75,76/),
     & TMP, W, AMP(1,13))
      CALL FFS4P1N_2(W(1,16), W(1,64), GC_84, TMP(1))
      call CombineAmp(8,
     & (/26,18,30,22,11,3,14,7/), 
     & (/69,70,71,72,73,74,75,76/),
     & TMP, W, AMP(1,13))  !  count 1
      CALL FFV2_5P1N_2(W(1,15), W(1,65), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/54,47,58,50,39,31,43,35/), 
     & (/69,70,71,72,73,74,75,76/),
     & TMP, W, AMP(1,14))
      CALL FFV2_5P1N_2(W(1,15), W(1,66), GC_51, GC_58, TMP(1))
      call CombineAmp(6,
     & (/23,15,27,19,8,4/), 
     & (/69,70,71,72,73,76/),
     & TMP, W, AMP(1,14))
      CALL FFV2_5P1N_2(W(1,15), W(1,67), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/56,49,60,52,41,33,45,37/), 
     & (/69,70,71,72,73,74,75,76/),
     & TMP, W, AMP(1,14))
      CALL FFV2_5P1N_2(W(1,15), W(1,68), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/25,17,29,21,10,2,13,6/), 
     & (/69,70,71,72,73,74,75,76/),
     & TMP, W, AMP(1,14))
      CALL FFV2_5P1N_2(W(1,16), W(1,65), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/55,48,59,51,40,32,44,36/), 
     & (/69,70,71,72,73,74,75,76/),
     & TMP, W, AMP(1,14))
      CALL FFV2_5P1N_2(W(1,16), W(1,66), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/24,16,28,20,9,1,12,5/), 
     & (/69,70,71,72,73,74,75,76/),
     & TMP, W, AMP(1,14))
      CALL FFV2_5P1N_2(W(1,16), W(1,67), GC_51, GC_58, TMP(1))
      call CombineAmp(6,
     & (/57,53,42,34,46,38/), 
     & (/69,72,73,74,75,76/),
     & TMP, W, AMP(1,14))
      CALL FFV2_5P1N_2(W(1,16), W(1,68), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/26,18,30,22,11,3,14,7/), 
     & (/69,70,71,72,73,74,75,76/),
     & TMP, W, AMP(1,14))  !  count 1
      CALL FFV1P0_3(W(1,13),W(1,3),GC_2,ZERO,FK_ZERO,W(1,77))  !  count 32
      CALL FFV1P0_3(W(1,13),W(1,4),GC_2,ZERO,FK_ZERO,W(1,78))  !  count 28
      CALL FFV1P0_3(W(1,14),W(1,3),GC_2,ZERO,FK_ZERO,W(1,79))  !  count 28
      CALL FFV1P0_3(W(1,14),W(1,4),GC_2,ZERO,FK_ZERO,W(1,80))  !  count 32
      CALL FFV1P1N_1(W(1,1), W(1,77), GC_2, TMP(1))
      call CombineAmp(8,
     & (/54,47,58,50,55,48,59,51/), 
     & (/53,54,55,56,57,58,59,60/),
     & TMP, W, AMP(1,15))
      CALL FFV1P1N_1(W(1,1), W(1,78), GC_2, TMP(1))
      call CombineAmp(8,
     & (/39,31,43,35,40,32,44,36/), 
     & (/53,54,55,56,57,58,59,60/),
     & TMP, W, AMP(1,15))
      CALL FFV1P1N_1(W(1,1), W(1,79), GC_2, TMP(1))
      call CombineAmp(6,
     & (/56,49,60,52,57,53/), 
     & (/53,54,55,56,57,60/),
     & TMP, W, AMP(1,15))
      CALL FFV1P1N_1(W(1,1), W(1,80), GC_2, TMP(1))
      call CombineAmp(8,
     & (/41,33,45,37,42,34,46,38/), 
     & (/53,54,55,56,57,58,59,60/),
     & TMP, W, AMP(1,15))
      CALL FFV1P1N_1(W(1,2), W(1,77), GC_2, TMP(1))
      call CombineAmp(8,
     & (/23,15,27,19,24,16,28,20/), 
     & (/53,54,55,56,57,58,59,60/),
     & TMP, W, AMP(1,15))
      CALL FFV1P1N_1(W(1,2), W(1,78), GC_2, TMP(1))
      call CombineAmp(6,
     & (/8,4,9,1,12,5/), 
     & (/53,56,57,58,59,60/),
     & TMP, W, AMP(1,15))
      CALL FFV1P1N_1(W(1,2), W(1,79), GC_2, TMP(1))
      call CombineAmp(8,
     & (/25,17,29,21,26,18,30,22/), 
     & (/53,54,55,56,57,58,59,60/),
     & TMP, W, AMP(1,15))
      CALL FFV1P1N_1(W(1,2), W(1,80), GC_2, TMP(1))
      call CombineAmp(8,
     & (/10,2,13,6,11,3,14,7/), 
     & (/53,54,55,56,57,58,59,60/),
     & TMP, W, AMP(1,15))  !  count 1
      CALL FFS4_3(W(1,13),W(1,3),GC_84,MDL_MH,ZERO,W(1,81))  !  count 48
      CALL FFS4_3(W(1,13),W(1,4),GC_84,MDL_MH,ZERO,W(1,82))  !  count 42
      CALL FFS4_3(W(1,14),W(1,3),GC_84,MDL_MH,ZERO,W(1,83))  !  count 42
      CALL FFS4_3(W(1,14),W(1,4),GC_84,MDL_MH,ZERO,W(1,84))  !  count 48
      CALL FFS4P1N_1(W(1,1), W(1,81), GC_84, TMP(1))
      call CombineAmp(8,
     & (/54,47,58,50,55,48,59,51/), 
     & (/53,54,55,56,57,58,59,60/),
     & TMP, W, AMP(1,16))
      CALL FFS4P1N_1(W(1,1), W(1,82), GC_84, TMP(1))
      call CombineAmp(8,
     & (/39,31,43,35,40,32,44,36/), 
     & (/53,54,55,56,57,58,59,60/),
     & TMP, W, AMP(1,16))
      CALL FFS4P1N_1(W(1,1), W(1,83), GC_84, TMP(1))
      call CombineAmp(6,
     & (/56,49,60,52,57,53/), 
     & (/53,54,55,56,57,60/),
     & TMP, W, AMP(1,16))
      CALL FFS4P1N_1(W(1,1), W(1,84), GC_84, TMP(1))
      call CombineAmp(8,
     & (/41,33,45,37,42,34,46,38/), 
     & (/53,54,55,56,57,58,59,60/),
     & TMP, W, AMP(1,16))
      CALL FFS4P1N_1(W(1,2), W(1,81), GC_84, TMP(1))
      call CombineAmp(8,
     & (/23,15,27,19,24,16,28,20/), 
     & (/53,54,55,56,57,58,59,60/),
     & TMP, W, AMP(1,16))
      CALL FFS4P1N_1(W(1,2), W(1,82), GC_84, TMP(1))
      call CombineAmp(6,
     & (/8,4,9,1,12,5/), 
     & (/53,56,57,58,59,60/),
     & TMP, W, AMP(1,16))
      CALL FFS4P1N_1(W(1,2), W(1,83), GC_84, TMP(1))
      call CombineAmp(8,
     & (/25,17,29,21,26,18,30,22/), 
     & (/53,54,55,56,57,58,59,60/),
     & TMP, W, AMP(1,16))
      CALL FFS4P1N_1(W(1,2), W(1,84), GC_84, TMP(1))
      call CombineAmp(8,
     & (/10,2,13,6,11,3,14,7/), 
     & (/53,54,55,56,57,58,59,60/),
     & TMP, W, AMP(1,16))  !  count 1
      CALL FFV2_5_3(W(1,13),W(1,3),GC_51,GC_58,MDL_MZ,ZERO,W(1,85))  !  count 48
      CALL FFV2_5_3(W(1,13),W(1,4),GC_51,GC_58,MDL_MZ,ZERO,W(1,86))  !  count 42
      CALL FFV2_5_3(W(1,14),W(1,3),GC_51,GC_58,MDL_MZ,ZERO,W(1,87))  !  count 42
      CALL FFV2_5_3(W(1,14),W(1,4),GC_51,GC_58,MDL_MZ,ZERO,W(1,88))  !  count 48
      CALL FFV2_5P1N_1(W(1,1), W(1,85), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/54,47,58,50,55,48,59,51/), 
     & (/53,54,55,56,57,58,59,60/),
     & TMP, W, AMP(1,17))
      CALL FFV2_5P1N_1(W(1,1), W(1,86), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/39,31,43,35,40,32,44,36/), 
     & (/53,54,55,56,57,58,59,60/),
     & TMP, W, AMP(1,17))
      CALL FFV2_5P1N_1(W(1,1), W(1,87), GC_51, GC_58, TMP(1))
      call CombineAmp(6,
     & (/56,49,60,52,57,53/), 
     & (/53,54,55,56,57,60/),
     & TMP, W, AMP(1,17))
      CALL FFV2_5P1N_1(W(1,1), W(1,88), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/41,33,45,37,42,34,46,38/), 
     & (/53,54,55,56,57,58,59,60/),
     & TMP, W, AMP(1,17))
      CALL FFV2_5P1N_1(W(1,2), W(1,85), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/23,15,27,19,24,16,28,20/), 
     & (/53,54,55,56,57,58,59,60/),
     & TMP, W, AMP(1,17))
      CALL FFV2_5P1N_1(W(1,2), W(1,86), GC_51, GC_58, TMP(1))
      call CombineAmp(6,
     & (/8,4,9,1,12,5/), 
     & (/53,56,57,58,59,60/),
     & TMP, W, AMP(1,17))
      CALL FFV2_5P1N_1(W(1,2), W(1,87), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/25,17,29,21,26,18,30,22/), 
     & (/53,54,55,56,57,58,59,60/),
     & TMP, W, AMP(1,17))
      CALL FFV2_5P1N_1(W(1,2), W(1,88), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/10,2,13,6,11,3,14,7/), 
     & (/53,54,55,56,57,58,59,60/),
     & TMP, W, AMP(1,17))  !  count 1
      CALL SSS1P1N_1(W(1,29), W(1,9), GC_69, TMP(1))
      call CombineAmpS(4, 
     &(/54,39,56,41/), 
     & (/81,82,83,84/), 
     & TMP, W, AMP(1,18))
      CALL SSS1P1N_1(W(1,29), W(1,10), GC_69, TMP(1))
      call CombineAmpS(4, 
     &(/47,31,49,33/), 
     & (/81,82,83,84/), 
     & TMP, W, AMP(1,18))
      CALL SSS1P1N_1(W(1,29), W(1,11), GC_69, TMP(1))
      call CombineAmpS(4, 
     &(/58,43,60,45/), 
     & (/81,82,83,84/), 
     & TMP, W, AMP(1,18))
      CALL SSS1P1N_1(W(1,29), W(1,12), GC_69, TMP(1))
      call CombineAmpS(4, 
     &(/50,35,52,37/), 
     & (/81,82,83,84/), 
     & TMP, W, AMP(1,18))
      CALL SSS1P1N_1(W(1,30), W(1,9), GC_69, TMP(1))
      call CombineAmpS(4, 
     &(/23,8,25,10/), 
     & (/81,82,83,84/), 
     & TMP, W, AMP(1,18))
      CALL SSS1P1N_1(W(1,30), W(1,10), GC_69, TMP(1))
      call CombineAmpS(3, 
     &(/15,17,2/), 
     & (/81,83,84/), 
     & TMP, W, AMP(1,18))
      CALL SSS1P1N_1(W(1,30), W(1,11), GC_69, TMP(1))
      call CombineAmpS(3, 
     &(/27,29,13/), 
     & (/81,83,84/), 
     & TMP, W, AMP(1,18))
      CALL SSS1P1N_1(W(1,30), W(1,12), GC_69, TMP(1))
      call CombineAmpS(4, 
     &(/19,4,21,6/), 
     & (/81,82,83,84/), 
     & TMP, W, AMP(1,18))
      CALL SSS1P1N_1(W(1,31), W(1,9), GC_69, TMP(1))
      call CombineAmpS(4, 
     &(/55,40,57,42/), 
     & (/81,82,83,84/), 
     & TMP, W, AMP(1,18))
      CALL SSS1P1N_1(W(1,31), W(1,10), GC_69, TMP(1))
      call CombineAmpS(3, 
     &(/48,32,34/), 
     & (/81,82,84/), 
     & TMP, W, AMP(1,18))
      CALL SSS1P1N_1(W(1,31), W(1,11), GC_69, TMP(1))
      call CombineAmpS(3, 
     &(/59,44,46/), 
     & (/81,82,84/), 
     & TMP, W, AMP(1,18))
      CALL SSS1P1N_1(W(1,31), W(1,12), GC_69, TMP(1))
      call CombineAmpS(4, 
     &(/51,36,53,38/), 
     & (/81,82,83,84/), 
     & TMP, W, AMP(1,18))
      CALL SSS1P1N_1(W(1,32), W(1,9), GC_69, TMP(1))
      call CombineAmpS(4, 
     &(/24,9,26,11/), 
     & (/81,82,83,84/), 
     & TMP, W, AMP(1,18))
      CALL SSS1P1N_1(W(1,32), W(1,10), GC_69, TMP(1))
      call CombineAmpS(4, 
     &(/16,1,18,3/), 
     & (/81,82,83,84/), 
     & TMP, W, AMP(1,18))
      CALL SSS1P1N_1(W(1,32), W(1,11), GC_69, TMP(1))
      call CombineAmpS(4, 
     &(/28,12,30,14/), 
     & (/81,82,83,84/), 
     & TMP, W, AMP(1,18))
      CALL SSS1P1N_1(W(1,32), W(1,12), GC_69, TMP(1))
      call CombineAmpS(4, 
     &(/20,5,22,7/), 
     & (/81,82,83,84/), 
     & TMP, W, AMP(1,18))  !  count 1
      CALL VVS1P1N_1(W(1,33), W(1,9), GC_81, TMP(1))
      call CombineAmp(4,
     & (/54,39,56,41/), 
     & (/85,86,87,88/),
     & TMP, W, AMP(1,19))
      CALL VVS1P1N_1(W(1,33), W(1,10), GC_81, TMP(1))
      call CombineAmp(4,
     & (/47,31,49,33/), 
     & (/85,86,87,88/),
     & TMP, W, AMP(1,19))
      CALL VVS1P1N_1(W(1,33), W(1,11), GC_81, TMP(1))
      call CombineAmp(4,
     & (/58,43,60,45/), 
     & (/85,86,87,88/),
     & TMP, W, AMP(1,19))
      CALL VVS1P1N_1(W(1,33), W(1,12), GC_81, TMP(1))
      call CombineAmp(4,
     & (/50,35,52,37/), 
     & (/85,86,87,88/),
     & TMP, W, AMP(1,19))
      CALL VVS1P1N_1(W(1,34), W(1,9), GC_81, TMP(1))
      call CombineAmp(4,
     & (/23,8,25,10/), 
     & (/85,86,87,88/),
     & TMP, W, AMP(1,19))
      CALL VVS1P1N_1(W(1,34), W(1,10), GC_81, TMP(1))
      call CombineAmp(3,
     & (/15,17,2/), 
     & (/85,87,88/),
     & TMP, W, AMP(1,19))
      CALL VVS1P1N_1(W(1,34), W(1,11), GC_81, TMP(1))
      call CombineAmp(3,
     & (/27,29,13/), 
     & (/85,87,88/),
     & TMP, W, AMP(1,19))
      CALL VVS1P1N_1(W(1,34), W(1,12), GC_81, TMP(1))
      call CombineAmp(4,
     & (/19,4,21,6/), 
     & (/85,86,87,88/),
     & TMP, W, AMP(1,19))
      CALL VVS1P1N_1(W(1,35), W(1,9), GC_81, TMP(1))
      call CombineAmp(4,
     & (/55,40,57,42/), 
     & (/85,86,87,88/),
     & TMP, W, AMP(1,19))
      CALL VVS1P1N_1(W(1,35), W(1,10), GC_81, TMP(1))
      call CombineAmp(3,
     & (/48,32,34/), 
     & (/85,86,88/),
     & TMP, W, AMP(1,19))
      CALL VVS1P1N_1(W(1,35), W(1,11), GC_81, TMP(1))
      call CombineAmp(3,
     & (/59,44,46/), 
     & (/85,86,88/),
     & TMP, W, AMP(1,19))
      CALL VVS1P1N_1(W(1,35), W(1,12), GC_81, TMP(1))
      call CombineAmp(4,
     & (/51,36,53,38/), 
     & (/85,86,87,88/),
     & TMP, W, AMP(1,19))
      CALL VVS1P1N_1(W(1,36), W(1,9), GC_81, TMP(1))
      call CombineAmp(4,
     & (/24,9,26,11/), 
     & (/85,86,87,88/),
     & TMP, W, AMP(1,19))
      CALL VVS1P1N_1(W(1,36), W(1,10), GC_81, TMP(1))
      call CombineAmp(4,
     & (/16,1,18,3/), 
     & (/85,86,87,88/),
     & TMP, W, AMP(1,19))
      CALL VVS1P1N_1(W(1,36), W(1,11), GC_81, TMP(1))
      call CombineAmp(4,
     & (/28,12,30,14/), 
     & (/85,86,87,88/),
     & TMP, W, AMP(1,19))
      CALL VVS1P1N_1(W(1,36), W(1,12), GC_81, TMP(1))
      call CombineAmp(4,
     & (/20,5,22,7/), 
     & (/85,86,87,88/),
     & TMP, W, AMP(1,19))  !  count 1
      CALL FFS4_1(W(1,1),W(1,9),GC_84,MDL_MC,FK_ZERO,W(1,89))  !  count 48
      CALL FFS4_1(W(1,1),W(1,10),GC_84,MDL_MC,FK_ZERO,W(1,90))  !  count 42
      CALL FFS4_1(W(1,1),W(1,11),GC_84,MDL_MC,FK_ZERO,W(1,91))  !  count 42
      CALL FFS4_1(W(1,1),W(1,12),GC_84,MDL_MC,FK_ZERO,W(1,92))  !  count 48
      CALL FFS4_1(W(1,2),W(1,9),GC_84,MDL_MC,FK_ZERO,W(1,93))  !  count 48
      CALL FFS4_1(W(1,2),W(1,10),GC_84,MDL_MC,FK_ZERO,W(1,94))  !  count 42
      CALL FFS4_1(W(1,2),W(1,11),GC_84,MDL_MC,FK_ZERO,W(1,95))  !  count 42
      CALL FFS4_1(W(1,2),W(1,12),GC_84,MDL_MC,FK_ZERO,W(1,96))  !  count 48
      CALL FFV1P1N_2(W(1,15), W(1,77), GC_2, TMP(1))
      call CombineAmp(8,
     & (/54,47,58,50,23,15,27,19/), 
     & (/89,90,91,92,93,94,95,96/),
     & TMP, W, AMP(1,20))
      CALL FFV1P1N_2(W(1,15), W(1,78), GC_2, TMP(1))
      call CombineAmp(6,
     & (/39,31,43,35,8,4/), 
     & (/89,90,91,92,93,96/),
     & TMP, W, AMP(1,20))
      CALL FFV1P1N_2(W(1,15), W(1,79), GC_2, TMP(1))
      call CombineAmp(8,
     & (/56,49,60,52,25,17,29,21/), 
     & (/89,90,91,92,93,94,95,96/),
     & TMP, W, AMP(1,20))
      CALL FFV1P1N_2(W(1,15), W(1,80), GC_2, TMP(1))
      call CombineAmp(8,
     & (/41,33,45,37,10,2,13,6/), 
     & (/89,90,91,92,93,94,95,96/),
     & TMP, W, AMP(1,20))
      CALL FFV1P1N_2(W(1,16), W(1,77), GC_2, TMP(1))
      call CombineAmp(8,
     & (/55,48,59,51,24,16,28,20/), 
     & (/89,90,91,92,93,94,95,96/),
     & TMP, W, AMP(1,20))
      CALL FFV1P1N_2(W(1,16), W(1,78), GC_2, TMP(1))
      call CombineAmp(8,
     & (/40,32,44,36,9,1,12,5/), 
     & (/89,90,91,92,93,94,95,96/),
     & TMP, W, AMP(1,20))
      CALL FFV1P1N_2(W(1,16), W(1,79), GC_2, TMP(1))
      call CombineAmp(6,
     & (/57,53,26,18,30,22/), 
     & (/89,92,93,94,95,96/),
     & TMP, W, AMP(1,20))
      CALL FFV1P1N_2(W(1,16), W(1,80), GC_2, TMP(1))
      call CombineAmp(8,
     & (/42,34,46,38,11,3,14,7/), 
     & (/89,90,91,92,93,94,95,96/),
     & TMP, W, AMP(1,20))  !  count 1
      CALL FFS4P1N_2(W(1,15), W(1,81), GC_84, TMP(1))
      call CombineAmp(8,
     & (/54,47,58,50,23,15,27,19/), 
     & (/89,90,91,92,93,94,95,96/),
     & TMP, W, AMP(1,21))
      CALL FFS4P1N_2(W(1,15), W(1,82), GC_84, TMP(1))
      call CombineAmp(6,
     & (/39,31,43,35,8,4/), 
     & (/89,90,91,92,93,96/),
     & TMP, W, AMP(1,21))
      CALL FFS4P1N_2(W(1,15), W(1,83), GC_84, TMP(1))
      call CombineAmp(8,
     & (/56,49,60,52,25,17,29,21/), 
     & (/89,90,91,92,93,94,95,96/),
     & TMP, W, AMP(1,21))
      CALL FFS4P1N_2(W(1,15), W(1,84), GC_84, TMP(1))
      call CombineAmp(8,
     & (/41,33,45,37,10,2,13,6/), 
     & (/89,90,91,92,93,94,95,96/),
     & TMP, W, AMP(1,21))
      CALL FFS4P1N_2(W(1,16), W(1,81), GC_84, TMP(1))
      call CombineAmp(8,
     & (/55,48,59,51,24,16,28,20/), 
     & (/89,90,91,92,93,94,95,96/),
     & TMP, W, AMP(1,21))
      CALL FFS4P1N_2(W(1,16), W(1,82), GC_84, TMP(1))
      call CombineAmp(8,
     & (/40,32,44,36,9,1,12,5/), 
     & (/89,90,91,92,93,94,95,96/),
     & TMP, W, AMP(1,21))
      CALL FFS4P1N_2(W(1,16), W(1,83), GC_84, TMP(1))
      call CombineAmp(6,
     & (/57,53,26,18,30,22/), 
     & (/89,92,93,94,95,96/),
     & TMP, W, AMP(1,21))
      CALL FFS4P1N_2(W(1,16), W(1,84), GC_84, TMP(1))
      call CombineAmp(8,
     & (/42,34,46,38,11,3,14,7/), 
     & (/89,90,91,92,93,94,95,96/),
     & TMP, W, AMP(1,21))  !  count 1
      CALL FFV2_5P1N_2(W(1,15), W(1,85), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/54,47,58,50,23,15,27,19/), 
     & (/89,90,91,92,93,94,95,96/),
     & TMP, W, AMP(1,22))
      CALL FFV2_5P1N_2(W(1,15), W(1,86), GC_51, GC_58, TMP(1))
      call CombineAmp(6,
     & (/39,31,43,35,8,4/), 
     & (/89,90,91,92,93,96/),
     & TMP, W, AMP(1,22))
      CALL FFV2_5P1N_2(W(1,15), W(1,87), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/56,49,60,52,25,17,29,21/), 
     & (/89,90,91,92,93,94,95,96/),
     & TMP, W, AMP(1,22))
      CALL FFV2_5P1N_2(W(1,15), W(1,88), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/41,33,45,37,10,2,13,6/), 
     & (/89,90,91,92,93,94,95,96/),
     & TMP, W, AMP(1,22))
      CALL FFV2_5P1N_2(W(1,16), W(1,85), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/55,48,59,51,24,16,28,20/), 
     & (/89,90,91,92,93,94,95,96/),
     & TMP, W, AMP(1,22))
      CALL FFV2_5P1N_2(W(1,16), W(1,86), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/40,32,44,36,9,1,12,5/), 
     & (/89,90,91,92,93,94,95,96/),
     & TMP, W, AMP(1,22))
      CALL FFV2_5P1N_2(W(1,16), W(1,87), GC_51, GC_58, TMP(1))
      call CombineAmp(6,
     & (/57,53,26,18,30,22/), 
     & (/89,92,93,94,95,96/),
     & TMP, W, AMP(1,22))
      CALL FFV2_5P1N_2(W(1,16), W(1,88), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/42,34,46,38,11,3,14,7/), 
     & (/89,90,91,92,93,94,95,96/),
     & TMP, W, AMP(1,22))  !  count 1
      CALL FFV1P1N_2(W(1,13), W(1,25), GC_2, TMP(1))
      call CombineAmp(8,
     & (/54,47,58,50,39,31,43,35/), 
     & (/69,70,71,72,73,74,75,76/),
     & TMP, W, AMP(1,23))
      CALL FFV1P1N_2(W(1,13), W(1,26), GC_2, TMP(1))
      call CombineAmp(6,
     & (/23,15,27,19,8,4/), 
     & (/69,70,71,72,73,76/),
     & TMP, W, AMP(1,23))
      CALL FFV1P1N_2(W(1,13), W(1,27), GC_2, TMP(1))
      call CombineAmp(8,
     & (/55,48,59,51,40,32,44,36/), 
     & (/69,70,71,72,73,74,75,76/),
     & TMP, W, AMP(1,23))
      CALL FFV1P1N_2(W(1,13), W(1,28), GC_2, TMP(1))
      call CombineAmp(8,
     & (/24,16,28,20,9,1,12,5/), 
     & (/69,70,71,72,73,74,75,76/),
     & TMP, W, AMP(1,23))
      CALL FFV1P1N_2(W(1,14), W(1,25), GC_2, TMP(1))
      call CombineAmp(8,
     & (/56,49,60,52,41,33,45,37/), 
     & (/69,70,71,72,73,74,75,76/),
     & TMP, W, AMP(1,23))
      CALL FFV1P1N_2(W(1,14), W(1,26), GC_2, TMP(1))
      call CombineAmp(8,
     & (/25,17,29,21,10,2,13,6/), 
     & (/69,70,71,72,73,74,75,76/),
     & TMP, W, AMP(1,23))
      CALL FFV1P1N_2(W(1,14), W(1,27), GC_2, TMP(1))
      call CombineAmp(6,
     & (/57,53,42,34,46,38/), 
     & (/69,72,73,74,75,76/),
     & TMP, W, AMP(1,23))
      CALL FFV1P1N_2(W(1,14), W(1,28), GC_2, TMP(1))
      call CombineAmp(8,
     & (/26,18,30,22,11,3,14,7/), 
     & (/69,70,71,72,73,74,75,76/),
     & TMP, W, AMP(1,23))  !  count 1
      CALL FFS4P1N_2(W(1,13), W(1,29), GC_84, TMP(1))
      call CombineAmp(8,
     & (/54,47,58,50,39,31,43,35/), 
     & (/69,70,71,72,73,74,75,76/),
     & TMP, W, AMP(1,24))
      CALL FFS4P1N_2(W(1,13), W(1,30), GC_84, TMP(1))
      call CombineAmp(6,
     & (/23,15,27,19,8,4/), 
     & (/69,70,71,72,73,76/),
     & TMP, W, AMP(1,24))
      CALL FFS4P1N_2(W(1,13), W(1,31), GC_84, TMP(1))
      call CombineAmp(8,
     & (/55,48,59,51,40,32,44,36/), 
     & (/69,70,71,72,73,74,75,76/),
     & TMP, W, AMP(1,24))
      CALL FFS4P1N_2(W(1,13), W(1,32), GC_84, TMP(1))
      call CombineAmp(8,
     & (/24,16,28,20,9,1,12,5/), 
     & (/69,70,71,72,73,74,75,76/),
     & TMP, W, AMP(1,24))
      CALL FFS4P1N_2(W(1,14), W(1,29), GC_84, TMP(1))
      call CombineAmp(8,
     & (/56,49,60,52,41,33,45,37/), 
     & (/69,70,71,72,73,74,75,76/),
     & TMP, W, AMP(1,24))
      CALL FFS4P1N_2(W(1,14), W(1,30), GC_84, TMP(1))
      call CombineAmp(8,
     & (/25,17,29,21,10,2,13,6/), 
     & (/69,70,71,72,73,74,75,76/),
     & TMP, W, AMP(1,24))
      CALL FFS4P1N_2(W(1,14), W(1,31), GC_84, TMP(1))
      call CombineAmp(6,
     & (/57,53,42,34,46,38/), 
     & (/69,72,73,74,75,76/),
     & TMP, W, AMP(1,24))
      CALL FFS4P1N_2(W(1,14), W(1,32), GC_84, TMP(1))
      call CombineAmp(8,
     & (/26,18,30,22,11,3,14,7/), 
     & (/69,70,71,72,73,74,75,76/),
     & TMP, W, AMP(1,24))  !  count 1
      CALL FFV2_5P1N_2(W(1,13), W(1,33), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/54,47,58,50,39,31,43,35/), 
     & (/69,70,71,72,73,74,75,76/),
     & TMP, W, AMP(1,25))
      CALL FFV2_5P1N_2(W(1,13), W(1,34), GC_51, GC_58, TMP(1))
      call CombineAmp(6,
     & (/23,15,27,19,8,4/), 
     & (/69,70,71,72,73,76/),
     & TMP, W, AMP(1,25))
      CALL FFV2_5P1N_2(W(1,13), W(1,35), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/55,48,59,51,40,32,44,36/), 
     & (/69,70,71,72,73,74,75,76/),
     & TMP, W, AMP(1,25))
      CALL FFV2_5P1N_2(W(1,13), W(1,36), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/24,16,28,20,9,1,12,5/), 
     & (/69,70,71,72,73,74,75,76/),
     & TMP, W, AMP(1,25))
      CALL FFV2_5P1N_2(W(1,14), W(1,33), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/56,49,60,52,41,33,45,37/), 
     & (/69,70,71,72,73,74,75,76/),
     & TMP, W, AMP(1,25))
      CALL FFV2_5P1N_2(W(1,14), W(1,34), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/25,17,29,21,10,2,13,6/), 
     & (/69,70,71,72,73,74,75,76/),
     & TMP, W, AMP(1,25))
      CALL FFV2_5P1N_2(W(1,14), W(1,35), GC_51, GC_58, TMP(1))
      call CombineAmp(6,
     & (/57,53,42,34,46,38/), 
     & (/69,72,73,74,75,76/),
     & TMP, W, AMP(1,25))
      CALL FFV2_5P1N_2(W(1,14), W(1,36), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/26,18,30,22,11,3,14,7/), 
     & (/69,70,71,72,73,74,75,76/),
     & TMP, W, AMP(1,25))  !  count 1
      CALL FFV1P1N_2(W(1,13), W(1,37), GC_2, TMP(1))
      call CombineAmp(8,
     & (/54,47,58,50,23,15,27,19/), 
     & (/89,90,91,92,93,94,95,96/),
     & TMP, W, AMP(1,26))
      CALL FFV1P1N_2(W(1,13), W(1,38), GC_2, TMP(1))
      call CombineAmp(6,
     & (/39,31,43,35,8,4/), 
     & (/89,90,91,92,93,96/),
     & TMP, W, AMP(1,26))
      CALL FFV1P1N_2(W(1,13), W(1,39), GC_2, TMP(1))
      call CombineAmp(8,
     & (/55,48,59,51,24,16,28,20/), 
     & (/89,90,91,92,93,94,95,96/),
     & TMP, W, AMP(1,26))
      CALL FFV1P1N_2(W(1,13), W(1,40), GC_2, TMP(1))
      call CombineAmp(8,
     & (/40,32,44,36,9,1,12,5/), 
     & (/89,90,91,92,93,94,95,96/),
     & TMP, W, AMP(1,26))
      CALL FFV1P1N_2(W(1,14), W(1,37), GC_2, TMP(1))
      call CombineAmp(8,
     & (/56,49,60,52,25,17,29,21/), 
     & (/89,90,91,92,93,94,95,96/),
     & TMP, W, AMP(1,26))
      CALL FFV1P1N_2(W(1,14), W(1,38), GC_2, TMP(1))
      call CombineAmp(8,
     & (/41,33,45,37,10,2,13,6/), 
     & (/89,90,91,92,93,94,95,96/),
     & TMP, W, AMP(1,26))
      CALL FFV1P1N_2(W(1,14), W(1,39), GC_2, TMP(1))
      call CombineAmp(6,
     & (/57,53,26,18,30,22/), 
     & (/89,92,93,94,95,96/),
     & TMP, W, AMP(1,26))
      CALL FFV1P1N_2(W(1,14), W(1,40), GC_2, TMP(1))
      call CombineAmp(8,
     & (/42,34,46,38,11,3,14,7/), 
     & (/89,90,91,92,93,94,95,96/),
     & TMP, W, AMP(1,26))  !  count 1
      CALL FFS4P1N_2(W(1,13), W(1,41), GC_84, TMP(1))
      call CombineAmp(8,
     & (/54,47,58,50,23,15,27,19/), 
     & (/89,90,91,92,93,94,95,96/),
     & TMP, W, AMP(1,27))
      CALL FFS4P1N_2(W(1,13), W(1,42), GC_84, TMP(1))
      call CombineAmp(6,
     & (/39,31,43,35,8,4/), 
     & (/89,90,91,92,93,96/),
     & TMP, W, AMP(1,27))
      CALL FFS4P1N_2(W(1,13), W(1,43), GC_84, TMP(1))
      call CombineAmp(8,
     & (/55,48,59,51,24,16,28,20/), 
     & (/89,90,91,92,93,94,95,96/),
     & TMP, W, AMP(1,27))
      CALL FFS4P1N_2(W(1,13), W(1,44), GC_84, TMP(1))
      call CombineAmp(8,
     & (/40,32,44,36,9,1,12,5/), 
     & (/89,90,91,92,93,94,95,96/),
     & TMP, W, AMP(1,27))
      CALL FFS4P1N_2(W(1,14), W(1,41), GC_84, TMP(1))
      call CombineAmp(8,
     & (/56,49,60,52,25,17,29,21/), 
     & (/89,90,91,92,93,94,95,96/),
     & TMP, W, AMP(1,27))
      CALL FFS4P1N_2(W(1,14), W(1,42), GC_84, TMP(1))
      call CombineAmp(8,
     & (/41,33,45,37,10,2,13,6/), 
     & (/89,90,91,92,93,94,95,96/),
     & TMP, W, AMP(1,27))
      CALL FFS4P1N_2(W(1,14), W(1,43), GC_84, TMP(1))
      call CombineAmp(6,
     & (/57,53,26,18,30,22/), 
     & (/89,92,93,94,95,96/),
     & TMP, W, AMP(1,27))
      CALL FFS4P1N_2(W(1,14), W(1,44), GC_84, TMP(1))
      call CombineAmp(8,
     & (/42,34,46,38,11,3,14,7/), 
     & (/89,90,91,92,93,94,95,96/),
     & TMP, W, AMP(1,27))  !  count 1
      CALL FFV2_5P1N_2(W(1,13), W(1,45), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/54,47,58,50,23,15,27,19/), 
     & (/89,90,91,92,93,94,95,96/),
     & TMP, W, AMP(1,28))
      CALL FFV2_5P1N_2(W(1,13), W(1,46), GC_51, GC_58, TMP(1))
      call CombineAmp(6,
     & (/39,31,43,35,8,4/), 
     & (/89,90,91,92,93,96/),
     & TMP, W, AMP(1,28))
      CALL FFV2_5P1N_2(W(1,13), W(1,47), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/55,48,59,51,24,16,28,20/), 
     & (/89,90,91,92,93,94,95,96/),
     & TMP, W, AMP(1,28))
      CALL FFV2_5P1N_2(W(1,13), W(1,48), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/40,32,44,36,9,1,12,5/), 
     & (/89,90,91,92,93,94,95,96/),
     & TMP, W, AMP(1,28))
      CALL FFV2_5P1N_2(W(1,14), W(1,45), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/56,49,60,52,25,17,29,21/), 
     & (/89,90,91,92,93,94,95,96/),
     & TMP, W, AMP(1,28))
      CALL FFV2_5P1N_2(W(1,14), W(1,46), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/41,33,45,37,10,2,13,6/), 
     & (/89,90,91,92,93,94,95,96/),
     & TMP, W, AMP(1,28))
      CALL FFV2_5P1N_2(W(1,14), W(1,47), GC_51, GC_58, TMP(1))
      call CombineAmp(6,
     & (/57,53,26,18,30,22/), 
     & (/89,92,93,94,95,96/),
     & TMP, W, AMP(1,28))
      CALL FFV2_5P1N_2(W(1,14), W(1,48), GC_51, GC_58, TMP(1))
      call CombineAmp(8,
     & (/42,34,46,38,11,3,14,7/), 
     & (/89,90,91,92,93,94,95,96/),
     & TMP, W, AMP(1,28))  !  count 1

      JAMP(:,:)  = (0d0,0d0)
      DO K = 1, NCOMB
        
        JAMP(:,:) = (0D0,0D0)
C       JAMPs contributing to orders ALL_ORDERS=1
        JAMP(1,1) = AMP( K,4)+AMP( K,5)+AMP( K,6)+AMP( K,7)+AMP( K,8)+AM
     $  P( K,9)+AMP( K,10) +AMP( K,11)+AMP( K,12)+AMP( K,13)+AMP( K,14)+AMP( K,2
     $  6)+AMP( K,27)+AMP( K,28)
        JAMP(2,1) = (-1.000000000000000D+00)*AMP( K,1)+(-1.0000000000000
     $  00D +00)*AMP( K,2)+(-1.000000000000000D+00)*AMP( K,3)+( -1.0000000000000
     $  00D+00)*AMP( K,15)+(-1.000000000000000D+00)*AMP( K,16) +(-1.000000000000
     $  000D+00)*AMP( K,17)+(-1.000000000000000D+00) *AMP( K,18)+(-1.00000000000
     $  0000D+00)*AMP( K,19)+(-1.000000000000000D +00)*AMP( K,20)+(-1.0000000000
     $  00000D+00)*AMP( K,21)+( -1.000000000000000D+00)*AMP( K,22)+(-1.000000000
     $  000000D+00)*AMP( K,23) +(-1.000000000000000D+00)*AMP( K,24)+(-1.00000000
     $  0000000D+00) *AMP( K,25)

        TS(K) = 0.D0 
        DO M = 1, NAMPSO
          DO I = 1, NCOLOR
            ZTEMP = (0.D0,0.D0)
            DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J,M)
            ENDDO
            DO N = 1, NAMPSO

              TS(K) = TS(K) + ZTEMP*DCONJG(JAMP(I,N))

            ENDDO
          ENDDO
        ENDDO
        if(sde_strat.eq.1) then
        
        IF(SDE_STRAT.EQ.1)THEN
          AMP2(20)=AMP2(20)+(AMP( K,20)+AMP( K,21)+AMP( K,22))*DCONJG(AM
     $    P( K,20)   +AMP( K,21)+AMP( K,22))
          AMP2(26)=AMP2(26)+(AMP( K,26)+AMP( K,27)+AMP( K,28))*DCONJG(AM
     $    P( K,26)   +AMP( K,27)+AMP( K,28))
          AMP2(12)=AMP2(12)+(AMP( K,12)+AMP( K,13)+AMP( K,14))*DCONJG(AM
     $    P( K,12)   +AMP( K,13)+AMP( K,14))
          AMP2(10)=AMP2(10)+(AMP( K,10)+AMP( K,11))*DCONJG(AMP( K,10)+AM
     $    P( K,11))
          AMP2(7)=AMP2(7)+(AMP( K,7)+AMP( K,8)+AMP( K,9))*DCONJG(AMP( K,
     $    7)+AMP( K,8)   +AMP( K,9))
          AMP2(23)=AMP2(23)+(AMP( K,23)+AMP( K,24)+AMP( K,25))*DCONJG(AM
     $    P( K,23)   +AMP( K,24)+AMP( K,25))
          AMP2(18)=AMP2(18)+(AMP( K,18)+AMP( K,19))*DCONJG(AMP( K,18)+AM
     $    P( K,19))
          AMP2(1)=AMP2(1)+(AMP( K,1)+AMP( K,2)+AMP( K,3))*DCONJG(AMP( K,
     $    1)+AMP( K,2)   +AMP( K,3))
          AMP2(15)=AMP2(15)+(AMP( K,15)+AMP( K,16)+AMP( K,17))*DCONJG(AM
     $    P( K,15)   +AMP( K,16)+AMP( K,17))
          AMP2(4)=AMP2(4)+(AMP( K,4)+AMP( K,5)+AMP( K,6))*DCONJG(AMP( K,
     $    4)+AMP( K,5)   +AMP( K,6))
        ENDIF

        endif
        Do I = 1, NCOLOR
          DO M = 1, NAMPSO
            DO N = 1, NAMPSO

              Jamp2(i)=Jamp2(i)+DABS(DBLE(Jamp(i,m)*dconjg(Jamp(i,n))))

            enddo
          enddo
        Enddo
      ENDDO

      END


      SUBROUTINE PRINT_ZERO_AMP_3()

      integer i
      i =1
      return
      end
C     Set of functions to handle the array indices of the split orders


      INTEGER FUNCTION SQSOINDEX3(ORDERINDEXA, ORDERINDEXB)
C     
C     This functions plays the role of the interference matrix. It can
C      be hardcoded or 
C     made more elegant using hashtables if its execution speed ever
C      becomes a relevant
C     factor. From two split order indices, it return the
C      corresponding index in the squared 
C     order canonical ordering.
C     
C     CONSTANTS
C     

      INTEGER    NSO, NSQUAREDSO, NAMPSO
      PARAMETER (NSO=1, NSQUAREDSO=1, NAMPSO=1)
C     
C     ARGUMENTS
C     
      INTEGER ORDERINDEXA, ORDERINDEXB
C     
C     LOCAL VARIABLES
C     
      INTEGER I, SQORDERS(NSO)
      INTEGER AMPSPLITORDERS(NAMPSO,NSO)
      DATA (AMPSPLITORDERS(  1,i),i=  1,  1) /    1/
      COMMON/AMPSPLITORDERS3/AMPSPLITORDERS
C     
C     FUNCTION
C     
      INTEGER SOINDEX_FOR_SQUARED_ORDERS3
C     
C     BEGIN CODE
C     
      DO I=1,NSO
        SQORDERS(I)=AMPSPLITORDERS(ORDERINDEXA,I)
     $   +AMPSPLITORDERS(ORDERINDEXB,I)
      ENDDO
      SQSOINDEX3=SOINDEX_FOR_SQUARED_ORDERS3(SQORDERS)
      END

      INTEGER FUNCTION SOINDEX_FOR_SQUARED_ORDERS3(ORDERS)
C     
C     This functions returns the integer index identifying the squared
C      split orders list passed in argument which corresponds to the
C      values of the following list of couplings (and in this order).
C     []
C     
C     CONSTANTS
C     
      INTEGER    NSO, NSQSO, NAMPSO
      PARAMETER (NSO=1, NSQSO=1, NAMPSO=1)
C     
C     ARGUMENTS
C     
      INTEGER ORDERS(NSO)
C     
C     LOCAL VARIABLES
C     
      INTEGER I,J
      INTEGER SQSPLITORDERS(NSQSO,NSO)
      DATA (SQSPLITORDERS(  1,i),i=  1,  1) /    2/
      COMMON/SQPLITORDERS3/SQPLITORDERS
C     
C     BEGIN CODE
C     
      DO I=1,NSQSO
        DO J=1,NSO
          IF (ORDERS(J).NE.SQSPLITORDERS(I,J)) GOTO 1009
        ENDDO
        SOINDEX_FOR_SQUARED_ORDERS3 = I
        RETURN
 1009   CONTINUE
      ENDDO

      WRITE(*,*) 'ERROR:: Stopping in function' 
      WRITE(*,*) 'SOINDEX_FOR_SQUARED_ORDERS3'
      WRITE(*,*) 'Could not find squared orders ',(ORDERS(I),I=1,NSO)
      STOP

      END

      SUBROUTINE GET_NSQSO_BORN3(NSQSO)
C     
C     Simple subroutine returning the number of squared split order
C     contributions returned when calling smatrix_split_orders 
C     

      INTEGER    NSQUAREDSO
      PARAMETER  (NSQUAREDSO=1)

      INTEGER NSQSO

      NSQSO=NSQUAREDSO

      END

C     This is the inverse subroutine of SOINDEX_FOR_SQUARED_ORDERS.
C      Not directly useful, but provided nonetheless.
      SUBROUTINE GET_SQUARED_ORDERS_FOR_SOINDEX3(SOINDEX,ORDERS)
C     
C     This functions returns the orders identified by the squared
C      split order index in argument. Order values correspond to
C      following list of couplings (and in this order):
C     []
C     
C     CONSTANTS
C     
      INTEGER    NSO, NSQSO
      PARAMETER (NSO=1, NSQSO=1)
C     
C     ARGUMENTS
C     
      INTEGER SOINDEX, ORDERS(NSO)
C     
C     LOCAL VARIABLES
C     
      INTEGER I
      INTEGER SQPLITORDERS(NSQSO,NSO)
      COMMON/SQPLITORDERS3/SQPLITORDERS	  
C     
C     BEGIN CODE
C     
      IF (SOINDEX.gt.0.and.SOINDEX.le.NSQSO) THEN
        DO I=1,NSO
          ORDERS(I) =  SQPLITORDERS(SOINDEX,I)
        ENDDO
        RETURN
      ENDIF

      WRITE(*,*) 'ERROR:: Stopping function'
     $ //' GET_SQUARED_ORDERS_FOR_SOINDEX3'
      WRITE(*,*) 'Could not find squared orders index ',SOINDEX
      STOP

      END SUBROUTINE

C     This is the inverse subroutine of getting amplitude SO orders.
C      Not directly useful, but provided nonetheless.
      SUBROUTINE GET_ORDERS_FOR_AMPSOINDEX3(SOINDEX,ORDERS)
C     
C     This functions returns the orders identified by the split order
C      index in argument. Order values correspond to following list of
C      couplings (and in this order):
C     []
C     
C     CONSTANTS
C     
      INTEGER    NSO, NAMPSO
      PARAMETER (NSO=1, NAMPSO=1)
C     
C     ARGUMENTS
C     
      INTEGER SOINDEX, ORDERS(NSO)
C     
C     LOCAL VARIABLES
C     
      INTEGER I
      INTEGER AMPSPLITORDERS(NAMPSO,NSO)
      COMMON/AMPSPLITORDERS3/AMPSPLITORDERS
C     
C     BEGIN CODE
C     
      IF (SOINDEX.gt.0.and.SOINDEX.le.NAMPSO) THEN
        DO I=1,NSO
          ORDERS(I) =  AMPSPLITORDERS(SOINDEX,I)
        ENDDO
        RETURN
      ENDIF

      WRITE(*,*) 'ERROR:: Stopping function GET_ORDERS_FOR_AMPSOINDEX3'
      WRITE(*,*) 'Could not find amplitude split orders index ',SOINDEX
      STOP

      END SUBROUTINE

C     This function is not directly useful, but included for
C      completeness
      INTEGER FUNCTION SOINDEX_FOR_AMPORDERS3(ORDERS)
C     
C     This functions returns the integer index identifying the
C      amplitude split orders passed in argument which correspond to
C      the values of the following list of couplings (and in this
C      order):
C     []
C     
C     CONSTANTS
C     
      INTEGER    NSO, NAMPSO
      PARAMETER (NSO=1, NAMPSO=1)
C     
C     ARGUMENTS
C     
      INTEGER ORDERS(NSO)
C     
C     LOCAL VARIABLES
C     
      INTEGER I,J
      INTEGER AMPSPLITORDERS(NAMPSO,NSO)
      COMMON/AMPSPLITORDERS3/AMPSPLITORDERS
C     
C     BEGIN CODE
C     
      DO I=1,NAMPSO
        DO J=1,NSO
          IF (ORDERS(J).NE.AMPSPLITORDERS(I,J)) GOTO 1009
        ENDDO
        SOINDEX_FOR_AMPORDERS3 = I
        RETURN
 1009   CONTINUE
      ENDDO

      WRITE(*,*) 'ERROR:: Stopping function SOINDEX_FOR_AMPORDERS3'
      WRITE(*,*) 'Could not find squared orders ',(ORDERS(I),I=1,NSO)
      STOP

      END

